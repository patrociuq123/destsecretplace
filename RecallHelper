--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...) return {...},v12("#",...);end v18=6;end if (v18==2) then function v22() local v31=0 -0 ;local v32;while true do if (v31==(2 -1)) then return v32;end if (v31==(0 -0)) then v32=v1(v16,v19,v19);v19=v19 + (2 -1) ;v31=620 -(555 + (995 -(857 + 74))) ;end end end v23=nil;function v23() local v33,v34=v1(v16,v19,v19 + (570 -(367 + 201)) );v19=v19 + (929 -(214 + 713)) ;return (v34 * 256) + v33 ;end v18=3;end if (v18==4) then function v25() local v35=v24();local v36=v24();local v37=1 + 0 ;local v38=(v21(v36,1 + 0 ,897 -(282 + 595) ) * ((1639 -(1523 + 114))^(29 + (11 -8)))) + v35 ;local v39=v21(v36,29 -(960 -(802 + 150)) ,(2950 -1854) -(68 + 997) );local v40=((v21(v36,1302 -(226 + (1893 -849)) )==(4 -3)) and  -(118 -(32 + 85))) or (1 + 0 + 0) ;if (v39==(0 + 0)) then if (v38==((1954 -(915 + 82)) -(892 + 65))) then return v40 * (0 -0) ;else v39=1;v37=0 -0 ;end elseif (v39==2047) then return ((v38==(0 -(0 -0))) and (v40 * ((351 -(87 + 263))/((105 + 75) -(67 + (148 -35)))))) or (v40 * NaN) ;end return v8(v40,v39-(751 + 272) ) * (v37 + (v38/((4 -2)^(39 + (1200 -(1069 + 118)))))) ;end v26=nil;function v26(v41) local v42=0 -0 ;local v43;local v44;while true do if ((0 -0)==v42) then v43=nil;if  not v41 then v41=v24();if (v41==0) then return "";end end v42=1 -0 ;end if ((1 + 0 + 1)==v42) then v44={};for v77=1 -0 , #v43 do v44[v77]=v2(v1(v3(v43,v77,v77)));end v42=3;end if (v42==(3 + 0)) then return v6(v44);end if (v42==(792 -(368 + 347 + 76))) then v43=v3(v16,v19,(v19 + v41) -((1203 -(201 + 571)) -(44 + 386)) );v19=v19 + v41 ;v42=6 -4 ;end end end v18=5;end if (v18==6) then v29=nil;function v29() local v45=561 -(79 + 482) ;local v46;local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v45~=0) then else v46=0 -0 ;v47=nil;v45=1;end if (v45~=3) then else v52=nil;while true do if (v46==(0 -0)) then local v97=285 -(134 + 151) ;local v98;while true do if (v97==(1665 -(970 + 695))) then v98=0 -0 ;while true do if (v98~=1) then else local v112=1990 -(582 + 1408) ;while true do if (v112~=1) then else v98=2;break;end if ((0 -0)==v112) then v49={};v50={v47,v48,nil,v49};v112=1825 -(1195 + 629) ;end end end if (0==v98) then local v113=0;while true do if (v113~=(1 -0)) then else v98=242 -(187 + 54) ;break;end if (v113==(780 -(162 + 618))) then v47={};v48={};v113=1 + 0 ;end end end if (v98==2) then v46=1;break;end end break;end end end if (v46==(2 + 0)) then local v99=0 -0 ;while true do if (v99~=0) then else for v106=1,v24() do local v107=0 -0 ;local v108;local v109;while true do if (v107~=1) then else while true do if (v108~=0) then else v109=v22();if (v21(v109,1,1 + 0 )==0) then local v232=0;local v233;local v234;local v235;local v236;while true do if (v232==(1638 -(1373 + 263))) then while true do if (v233==(1000 -(451 + 549))) then local v349=0;while true do if (v349==1) then v233=1;break;end if (v349~=(0 + 0)) then else v234=v21(v109,2,3);v235=v21(v109,4,9 -3 );v349=1;end end end if (v233~=3) then else if (v21(v235,4 -1 ,1387 -(746 + 638) )==1) then v236[4]=v52[v236[4]];end v47[v106]=v236;break;end if (v233==(1 + 1)) then local v351=0;while true do if (v351~=(1 -0)) then else v233=344 -(218 + 123) ;break;end if (v351~=0) then else if (v21(v235,1,1)~=1) then else v236[1583 -(1535 + 46) ]=v52[v236[2]];end if (v21(v235,2,2)~=(1 + 0)) then else v236[3]=v52[v236[1 + 2 ]];end v351=561 -(306 + 254) ;end end end if (v233==1) then local v352=0;while true do if (v352~=(1 + 0)) then else v233=2;break;end if (v352~=0) then else v236={v23(),v23(),nil,nil};if (v234==(1467 -(899 + 568))) then local v376=0;local v377;local v378;while true do if (v376==(0 + 0)) then local v380=0;while true do if (v380==(0 -0)) then v377=0;v378=nil;v380=604 -(268 + 335) ;end if (v380~=(291 -(60 + 230))) then else v376=573 -(426 + 146) ;break;end end end if (v376~=(1 + 0)) then else while true do if (0==v377) then v378=1456 -(282 + 1174) ;while true do if (v378==(811 -(569 + 242))) then v236[8 -5 ]=v23();v236[1 + 3 ]=v23();break;end end break;end end break;end end elseif (v234==(1025 -(706 + 318))) then v236[1254 -(721 + 530) ]=v24();elseif (v234==2) then v236[3]=v24() -(2^(1287 -(945 + 326))) ;elseif (v234~=(7 -4)) then else local v384=0 + 0 ;local v385;while true do if (v384==0) then v385=0;while true do if (0==v385) then v236[3]=v24() -((702 -(271 + 429))^(15 + 1)) ;v236[4]=v23();break;end end break;end end end v352=1;end end end end break;end if (1==v232) then v235=nil;v236=nil;v232=2;end if (0~=v232) then else v233=1500 -(1408 + 92) ;v234=nil;v232=1087 -(461 + 625) ;end end end break;end end break;end if (v107~=0) then else v108=1288 -(993 + 295) ;v109=nil;v107=1 + 0 ;end end end for v110=1172 -(418 + 753) ,v24() do v48[v110-(1 + 0) ]=v29();end v99=1 + 0 ;end if (v99==1) then return v50;end end end if (v46==1) then local v100=0 + 0 ;local v101;while true do if (v100~=(0 + 0)) then else v101=529 -(406 + 123) ;while true do if (v101~=(1771 -(1749 + 20))) then else v46=1 + 1 ;break;end if (v101~=0) then else local v114=1322 -(1249 + 73) ;while true do if (v114==(1 + 0)) then v101=1146 -(466 + 679) ;break;end if (0==v114) then v51=v24();v52={};v114=2 -1 ;end end end if (v101==(2 -1)) then local v115=0;while true do if (v115==0) then for v117=1901 -(106 + 1794) ,v51 do local v118=0 + 0 ;local v119;local v120;local v121;local v122;local v123;while true do if ((1 + 1)~=v118) then else v123=nil;while true do if (v119==1) then local v334=0 -0 ;while true do if (v334==(2 -1)) then v119=2;break;end if (v334==(114 -(4 + 110))) then v122=nil;v123=nil;v334=1;end end end if (v119~=(586 -(57 + 527))) then else while true do if (v120==(1427 -(41 + 1386))) then local v358=103 -(17 + 86) ;while true do if (v358~=(1 + 0)) then else v120=1;break;end if (v358==(0 -0)) then v121=0;v122=nil;v358=1;end end end if (v120==(2 -1)) then v123=nil;while true do if (v121~=0) then else local v369=0;local v370;while true do if (0==v369) then v370=166 -(122 + 44) ;while true do if (v370==1) then v121=1;break;end if (v370~=(0 -0)) then else local v382=0 -0 ;local v383;while true do if (v382~=0) then else v383=0 + 0 ;while true do if ((1 + 0)==v383) then v370=1 -0 ;break;end if (v383==(65 -(30 + 35))) then local v388=0 + 0 ;while true do if (v388~=1) then else v383=1258 -(1043 + 214) ;break;end if (v388==(0 -0)) then v122=v22();v123=nil;v388=1213 -(323 + 889) ;end end end end break;end end end end break;end end end if (v121==(2 -1)) then if (v122==1) then v123=v22()~=0 ;elseif (v122==2) then v123=v25();elseif (v122==(583 -(361 + 219))) then v123=v26();end v52[v117]=v123;break;end end break;end end break;end if ((320 -(53 + 267))==v119) then local v335=0;while true do if (0==v335) then v120=0;v121=nil;v335=1 + 0 ;end if (v335==(414 -(15 + 398))) then v119=1;break;end end end end break;end if ((983 -(18 + 964))==v118) then v121=nil;v122=nil;v118=7 -5 ;end if (v118==(0 + 0)) then v119=0;v120=nil;v118=1;end end end v50[2 + 1 ]=v22();v115=1;end if ((851 -(20 + 830))==v115) then v101=2 + 0 ;break;end end end end break;end end end end break;end if (v45==(127 -(116 + 10))) then v48=nil;v49=nil;v45=2;end if (v45~=2) then else v50=nil;v51=nil;v45=3;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v53) if (v1(v53,2)==79) then v20=v0(v3(v53,1,1));return "";else local v69=v2(v0(v53,16));if v20 then local v79=v5(v69,v20);v20=nil;return v79;else return v69;end end end);v18=1;end if (v18==3) then v24=nil;function v24() local v54=0 + 0 ;local v55;local v56;local v57;local v58;while true do if (v54==(738 -(542 + 196))) then v55,v56,v57,v58=v1(v16,v19,v19 + (6 -3) );v19=v19 + 2 + 2 ;v54=1 + (0 -0) ;end if (v54==1) then return (v58 * (6039236 + 10737980)) + (v57 * (168020 -102484)) + (v56 * (1807 -(1126 + 425))) + v55 ;end end end v25=nil;v18=4;end if (v18==7) then function v30(v59,v60,v61) local v62=0;local v63;local v64;local v65;while true do if (v62==1) then v65=v59[3];return function(...) local v80=v63;local v81=v64;local v82=v65;local v83=v28;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v12("#",...) -1 ;local v89={};local v90={};for v94=0,v88 do if (v94>=v82) then v86[v94-v82 ]=v87[v94 + 1 ];else v90[v94]=v87[v94 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=32) then if (v93<=15) then if (v93<=7) then if (v93<=3) then if (v93<=1) then if (v93==0) then local v124=v92[2];v90[v124](v13(v90,v124 + 1 ,v92[3]));else v90[v92[2]]=v30(v81[v92[3]],nil,v61);end elseif (v93==2) then do return;end elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=5) then if (v93==4) then v90[v92[2]][v92[3]]=v90[v92[4]];else v90[v92[2]]=v90[v92[3]];end elseif (v93==6) then local v130=v92[3];local v131=v90[v130];for v237=v130 + 1 ,v92[4] do v131=v131   .. v90[v237] ;end v90[v92[2]]=v131;elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=11) then if (v93<=9) then if (v93>8) then local v133=v92[2];local v134={};for v238=1, #v89 do local v239=0;local v240;while true do if (v239==0) then v240=v89[v238];for v336=0, #v240 do local v337=0;local v338;local v339;local v340;while true do if (v337==0) then v338=v240[v336];v339=v338[1];v337=1;end if (v337==1) then v340=v338[2];if ((v339==v90) and (v340>=v133)) then v134[v340]=v339[v340];v338[1]=v134;end break;end end end break;end end end else local v135=v92[2];v90[v135](v13(v90,v135 + 1 ,v92[3]));end elseif (v93>10) then local v136=0;local v137;local v138;local v139;local v140;while true do if (v136==1) then v85=(v139 + v137) -1 ;v140=0;v136=2;end if (0==v136) then v137=v92[2];v138,v139=v83(v90[v137](v13(v90,v137 + 1 ,v92[3])));v136=1;end if (v136==2) then for v310=v137,v85 do v140=v140 + 1 ;v90[v310]=v138[v140];end break;end end else do return;end end elseif (v93<=13) then if (v93==12) then v90[v92[2]]={};else v90[v92[2]]=v90[v92[3]];end elseif (v93>14) then v90[v92[2]]=v92[3];else local v146=0;local v147;while true do if (v146==0) then v147=v92[2];do return v90[v147](v13(v90,v147 + 1 ,v92[3]));end break;end end end elseif (v93<=23) then if (v93<=19) then if (v93<=17) then if (v93>16) then local v148=v92[2];v90[v148]=v90[v148]();else v90[v92[2]]=v92[3];end elseif (v93==18) then local v152=v92[2];local v153=v90[v92[3]];v90[v152 + 1 ]=v153;v90[v152]=v153[v92[4]];elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=21) then if (v93==20) then for v241=v92[2],v92[3] do v90[v241]=nil;end else local v157=0;local v158;local v159;local v160;while true do if (v157==0) then v158=v81[v92[3]];v159=nil;v157=1;end if (v157==2) then for v313=1,v92[4] do v84=v84 + 1 ;local v314=v80[v84];if (v314[1]==13) then v160[v313-1 ]={v90,v314[3]};else v160[v313-1 ]={v60,v314[3]};end v89[ #v89 + 1 ]=v160;end v90[v92[2]]=v30(v158,v159,v61);break;end if (v157==1) then v160={};v159=v10({},{__index=function(v316,v317) local v318=v160[v317];return v318[1][v318[2]];end,__newindex=function(v319,v320,v321) local v322=0;local v323;while true do if (0==v322) then v323=v160[v320];v323[1][v323[2]]=v321;break;end end end});v157=2;end end end elseif (v93>22) then v90[v92[2]]=v90[v92[3]][v92[4]];else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=27) then if (v93<=25) then if (v93==24) then local v165=v92[2];v90[v165](v90[v165 + 1 ]);else v90[v92[2]][v92[3]]=v92[4];end elseif (v93==26) then v90[v92[2]][v92[3]]=v90[v92[4]];else v90[v92[2]]= #v90[v92[3]];end elseif (v93<=29) then if (v93==28) then local v171=v92[2];local v172={};for v243=1, #v89 do local v244=v89[v243];for v273=0, #v244 do local v274=v244[v273];local v275=v274[1];local v276=v274[2];if ((v275==v90) and (v276>=v171)) then local v324=0;while true do if (0==v324) then v172[v276]=v275[v276];v274[1]=v172;break;end end end end end else local v173=v92[2];local v174={v90[v173](v90[v173 + 1 ])};local v175=0;for v245=v173,v92[4] do v175=v175 + 1 ;v90[v245]=v174[v175];end end elseif (v93<=30) then local v176=v92[2];local v177,v178=v83(v90[v176](v13(v90,v176 + 1 ,v92[3])));v85=(v178 + v176) -1 ;local v179=0;for v248=v176,v85 do local v249=0;while true do if (v249==0) then v179=v179 + 1 ;v90[v248]=v177[v179];break;end end end elseif (v93>31) then local v277=0;local v278;local v279;while true do if (v277==1) then for v346=v278 + 1 ,v92[3] do v7(v279,v90[v346]);end break;end if (v277==0) then v278=v92[2];v279=v90[v278];v277=1;end end else local v280=v92[2];v90[v280]=v90[v280](v13(v90,v280 + 1 ,v85));end elseif (v93<=49) then if (v93<=40) then if (v93<=36) then if (v93<=34) then if (v93>33) then local v180=v90[v92[4]];if  not v180 then v84=v84 + 1 ;else v90[v92[2]]=v180;v84=v92[3];end else v84=v92[3];end elseif (v93==35) then for v250=v92[2],v92[3] do v90[v250]=nil;end else local v182=v92[2];local v183={v90[v182](v90[v182 + 1 ])};local v184=0;for v252=v182,v92[4] do v184=v184 + 1 ;v90[v252]=v183[v184];end end elseif (v93<=38) then if (v93==37) then local v185=v81[v92[3]];local v186;local v187={};v186=v10({},{__index=function(v255,v256) local v257=0;local v258;while true do if (v257==0) then v258=v187[v256];return v258[1][v258[2]];end end end,__newindex=function(v259,v260,v261) local v262=v187[v260];v262[1][v262[2]]=v261;end});for v264=1,v92[4] do local v265=0;local v266;while true do if (v265==1) then if (v266[1]==13) then v187[v264-1 ]={v90,v266[3]};else v187[v264-1 ]={v60,v266[3]};end v89[ #v89 + 1 ]=v187;break;end if (v265==0) then v84=v84 + 1 ;v266=v80[v84];v265=1;end end end v90[v92[2]]=v30(v185,v186,v61);elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==39) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v189=0;local v190;while true do if (v189==0) then v190=v92[2];v90[v190]=v90[v190](v13(v90,v190 + 1 ,v92[3]));break;end end end elseif (v93<=44) then if (v93<=42) then if (v93==41) then v84=v92[3];else v90[v92[2]]= #v90[v92[3]];end elseif (v93>43) then local v193=v92[2];v90[v193]=v90[v193](v90[v193 + 1 ]);else local v195=v92[2];local v196=v90[v195];local v197=v92[3];for v267=1,v197 do v196[v267]=v90[v195 + v267 ];end end elseif (v93<=46) then if (v93>45) then v90[v92[2]]={};else v90[v92[2]]=v60[v92[3]];end elseif (v93<=47) then local v201=v92[2];do return v13(v90,v201,v85);end elseif (v93>48) then v90[v92[2]]=v60[v92[3]];elseif (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=57) then if (v93<=53) then if (v93<=51) then if (v93==50) then local v202=0;local v203;local v204;local v205;while true do if (1==v202) then v205=v92[3];for v331=1,v205 do v204[v331]=v90[v203 + v331 ];end break;end if (v202==0) then v203=v92[2];v204=v90[v203];v202=1;end end elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>52) then local v206=v92[2];v90[v206]=v90[v206](v90[v206 + 1 ]);else local v208=0;local v209;while true do if (v208==0) then v209=v90[v92[4]];if  not v209 then v84=v84 + 1 ;else local v343=0;while true do if (v343==0) then v90[v92[2]]=v209;v84=v92[3];break;end end end break;end end end elseif (v93<=55) then if (v93>54) then v90[v92[2]]=v90[v92[3]][v92[4]];else local v212=v92[2];v90[v212]=v90[v212](v13(v90,v212 + 1 ,v85));end elseif (v93==56) then v90[v92[2]]=v61[v92[3]];else local v216=0;local v217;while true do if (v216==0) then v217=v92[2];v90[v217]=v90[v217]();break;end end end elseif (v93<=61) then if (v93<=59) then if (v93==58) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else local v218=v92[2];v90[v218]=v90[v218](v13(v90,v218 + 1 ,v92[3]));end elseif (v93==60) then v90[v92[2]]=v61[v92[3]];else local v222=v92[2];do return v90[v222](v13(v90,v222 + 1 ,v92[3]));end end elseif (v93<=63) then if (v93==62) then local v223=0;local v224;while true do if (v223==0) then v224=v92[2];do return v13(v90,v224,v85);end break;end end else local v225=0;local v226;while true do if (v225==0) then v226=v92[2];v90[v226](v90[v226 + 1 ]);break;end end end elseif (v93<=64) then local v227=v92[2];local v228=v90[v92[3]];v90[v227 + 1 ]=v228;v90[v227]=v228[v92[4]];elseif (v93>65) then local v290=v92[3];local v291=v90[v290];for v308=v290 + 1 ,v92[4] do v291=v291   .. v90[v308] ;end v90[v92[2]]=v291;else v90[v92[2]]=v30(v81[v92[3]],nil,v61);end v84=v84 + 1 ;end end;end if (v62==0) then v63=v59[1];v64=v59[2];v62=1;end end end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v66,v67,v68) if v68 then local v70=405 -(118 + (642 -355)) ;local v71;while true do if (v70==(0 -0)) then v71=(v66/((1123 -(118 + 1003))^(v67-(2 -1))))%(2^(((v68-(378 -(142 + 235))) -(v67-(4 -(1 + 2)))) + 1 + 0)) ;return v71-(v71%(978 -(553 + 424))) ;end end else local v72=0 -(0 -0) ;local v73;while true do if (v72==((0 -0) + (753 -(239 + 514)))) then v73=((5 -3) + 0)^(v67-(1 + 0)) ;return (((v66%(v73 + v73))>=v73) and (1 + 0)) or (0 + 0) ;end end end end v22=nil;v18=2;end end end return vv9(),...);