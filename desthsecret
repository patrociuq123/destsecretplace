local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Destroyer Hub | Slap Battles V.4.1", HidePremium = false, IntroEnabled = true, IntroText = "Destroyer Hub", SaveConfig = true, ConfigFolder = "DestroyerHub"})

-- Tabs
local Tab1 = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local TabMisc = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local TabCredit = Window:MakeTab({
	Name = "Credits",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

-- Sections
local Section = Tab1:AddSection({
	Name = "Main"
})

-- Toggle 

Tab1:AddToggle({
	Name = "Slap Farm (Need Dual)",
	Default = false,
	Callback = function(Value)
SlapFarm = Value
while SlapFarm do
  
local function GetRandomPlayer()
    local players = game.Players:GetPlayers()
    local randomIndex = math.random(1, #players)
    return players[randomIndex]
end

local function TeleportToRandomPlayer(player)
    local randomPlayer = GetRandomPlayer()
    if randomPlayer then
        player.Character:SetPrimaryPartCFrame(randomPlayer.Character.PrimaryPart.CFrame)
    else
        print("Nenhum jogador disponível para teleportar.")
    end
end

local player = game.Players.LocalPlayer
if player then
    TeleportToRandomPlayer(player)
else
    print("Não foi possível encontrar o jogador local.")
end
wait(0.5)
local players = game:GetService("Players"):GetPlayers()
local originPosition = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position -- Se estiver sendo executado em um cliente
local closestPlayer = nil
local closestDistance = math.huge

for _, player in ipairs(players) do
    if player ~= game:GetService("Players").LocalPlayer then -- Excluir o jogador local
        local playerPosition = player.Character.HumanoidRootPart.Position
        local distance = (playerPosition - originPosition).magnitude
        if distance < closestDistance then
            closestPlayer = player
            closestDistance = distance
        end
    end
end

if closestPlayer then
    local args = {
        [1] = closestPlayer.Character.Torso
    }
    
    game:GetService("ReplicatedStorage").GeneralHit:FireServer(unpack(args))
else
    print("Não há jogadores no jogo, exceto o jogador local.")
end
task.wait(1.5)
  end
end  
})

Tab1:AddButton({
	Name = "Invisible",
	Callback = function()
fireclickdetector(workspace.Lobby["Ghost"].ClickDetector)
wait(2)
game:GetService("ReplicatedStorage"):WaitForChild("Ghostinvisibilityactivated"):FireServer()
end		
})

TabCredit:AddLabel("Made by Patroqofc.Credits to GiangMc and Bacon Scripter for helping with tips. Message Patroqofc if you have any bug")


Tab1:AddButton({
	Name = "Kick Random Player",
	Callback = function()
local position = CFrame.new(-732.574097, 306.27005, -1.09629261, -0.0223243386, 0.0153695755, -0.999632657, -2.04585031e-05, 0.999881864, 0.0153738642, 0.999750793, 0.000363676081, -0.0223213844)
local transparency = 0

local part = Instance.new("Part")
part.Size = Vector3.new(100, 1.5, 100) -- Tamanho da plataforma
part.Position = position.p -- Posição da plataforma
part.Anchored = true -- A plataforma está ancorada
part.Transparency = transparency -- Definir transparência
part.Parent = game.Workspace -- Colocar a plataforma no espaço de trabalho
wait(0.7)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local newCFrame = CFrame.new(-723.266052, 310.018982, -0.0775156692, -0.473462105, -9.27528063e-08, -0.880814195, -2.28346426e-08, 1, -9.30292359e-08, 0.880814195, -2.39327402e-08, -0.473462105)

humanoid.RootPart.CFrame = newCFrame
wait(0.5)
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.Recall,
    [2] = Vector3.new(55.76399230957031, -5.172937870025635, 45.26799011230469)
}

game:GetService("ReplicatedStorage"):WaitForChild("Recall"):InvokeServer(unpack(args))

wait(2.4)
-- Função para obter um jogador aleatório no servidor
local function GetRandomPlayer()
    local players = game.Players:GetPlayers()
    local randomIndex = math.random(1, #players)
    return players[randomIndex]
end

-- Função para teleportar um jogador para outro jogador aleatório
local function TeleportToRandomPlayer(player)
    local randomPlayer = GetRandomPlayer()
    if randomPlayer then
        player.Character:SetPrimaryPartCFrame(randomPlayer.Character.PrimaryPart.CFrame)
    else
        print("Nenhum jogador disponível para teleportar.")
    end
end

-- Teleportar o jogador para uma pessoa aleatória quando o script é executado
local player = game.Players.LocalPlayer
if player then
    TeleportToRandomPlayer(player)
else
    print("Não foi possível encontrar o jogador local.")
end
end
})

Tab1:AddToggle({
	Name = "Bob Farm (Fixed)",
	Default = false,
	Callback = function(Value)
  BobFarm = Value
  while BobFarm do
    local jogador = game.Players.LocalPlayer
local destinoCFrame = CFrame.new(-810.162292, 329.90097, 3.98657513, 1, 0, 0, 0, 1, 0, 0, 0, 1)
jogador.Character:SetPrimaryPartCFrame(destinoCFrame)
wait(2)
local args = {
    [1] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Duplicate"):FireServer(unpack(args))
wait(1.5) 
local player = game.Players.LocalPlayer
player.Character:WaitForChild("Humanoid").Health = 0
  wait(6)
  end
end
})


TabMisc:AddButton({
	Name = "Anti-Void",
	Callback = function()

local platformSize = Vector3.new(1000, 5, 1000) 
    local transparency = 0.3 
    local cframe = CFrame.new(-117.657799, -13.2288647, 31.1358738, 0.341914088, 0, -0.93973124, 0, 1, 0, 0.93973124, 0, 0.341914088)
    local function createPlatform()
        local platform = Instance.new("Part")
        platform.Size = platformSize
        platform.Anchored = true
        platform.Transparency = transparency
        platform.BrickColor = BrickColor.new("Medium stone grey") 
        platform.CFrame = cframe
        platform.Parent = game.Workspace
        return platform
    end
    local platform = createPlatform()
end  
})

TabMisc:AddButton({
	Name = "Kill Random Player (Needs Rob)",
	Callback = function()
    game:GetService("ReplicatedStorage").rob:FireServer()
    wait(4)
    -- Função para obter um jogador aleatório no servidor
    local function GetRandomPlayer()
        local players = game.Players:GetPlayers()
        local randomIndex = math.random(1, #players)
        return players[randomIndex]
    end

    -- Função para teleportar um jogador para outro jogador aleatório
    local function TeleportToRandomPlayer(player)
        local randomPlayer = GetRandomPlayer()
        if randomPlayer then
            player.Character:SetPrimaryPartCFrame(randomPlayer.Character.PrimaryPart.CFrame)
        else
            print("Nenhum jogador disponível para teleportar.")
        end
    end

    -- Teleportar o jogador para uma pessoa aleatória quando o script é executado
    local player = game.Players.LocalPlayer
    if player then
        TeleportToRandomPlayer(player)
    else
        print("Não foi possível encontrar o jogador local.")
    end
end
})


TabMisc:AddToggle({
	Name = "Auto Spawn Replica",
	Default = false,
	Callback = function(Value)
spawnReplica = Value
while spawnReplica do
    local args = {
            [1] = true
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Duplicate"):FireServer(unpack(args))

        wait(6)  -- espera 6 segundos antes de continuar para a próxima execução
    end 
	end    
})


TabMisc:AddToggle({
	Name = "Auto Slap Replica (Need Auto Spawn Replica)",
	Default = false,
	Callback = function(Value)
 slapReplica = Value
 while slapReplica do 
local args = {
    [1] = workspace:WaitForChild("\195\133Patrosdino"):WaitForChild("Left Leg")
}

game:GetService("ReplicatedStorage"):WaitForChild("b"):FireServer(unpack(args))
   task.wait(0.2)
	 end  
	end
})


Tab1:AddButton({
	Name = "Safe Spot",
	Callback = function()
    -- Configurações da plataforma
    local platformSize = Vector3.new(1000, 10, 1000) -- Tamanho da plataforma (mais fina)
    local transparency = 0.3 -- Nível de transparência da plataforma

    -- CFrame fornecida
    local cframe = CFrame.new(5482.86963, 172.234634, -269.047546, -0.599627018, -0.00381562836, 0.800270498, -1.80001043e-05, 0.999988735, 0.00475436728, -0.800279677, 0.00283642649, -0.599620283)

    -- Função para criar a plataforma usando a CFrame fornecida
    local function createPlatform()
        local platform = Instance.new("Part")
        platform.Size = platformSize
        platform.Anchored = true
        platform.Transparency = transparency
        platform.BrickColor = BrickColor.new("Medium stone grey") -- Cor da plataforma (pode ser alterada)
        platform.CFrame = cframe
        platform.Parent = game.Workspace
        return platform
    end

    -- Criar a plataforma
    local platform = createPlatform()
    wait(1)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    local newCFrame = CFrame.new(5597.26465, 181.799469, -146.706467, -0.435461491, 0.00667448156, 0.900182664, -1.16910187e-05, 0.999972463, -0.00742003508, -0.9002074, -0.00324165984, -0.435449421)

    humanoid.RootPart.CFrame = newCFrame
end    
})


Tab1:AddButton({
	Name = "Jester All (Beta)",
	Callback = function()
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

for i = 1, 40 do
    local allPlayers = Players:GetPlayers()
    local randomPlayer = allPlayers[math.random(1, #allPlayers)]

    local args = {
        [1] = "Ability3",
        [2] = randomPlayer
    }

    ReplicatedStorage:WaitForChild("GeneralAbility"):FireServer(unpack(args))
    
    -- Esperar 1.7 segundos antes da próxima iteração
    wait(2)
  end
end    
})


TabMisc:AddToggle({
	Name = "Null Spam",
	Default = false,
	Callback = function(Value)
nullSpam = Value
while nullSpam do
game:GetService("ReplicatedStorage"):WaitForChild("NullAbility"):FireServer() 
task.wait(10)
	  end
	end    
})


Tab1:AddButton({
	Name = "GodMode (Need Golden)",
	Callback = function()
fireclickdetector(workspace.Lobby["Golden"].ClickDetector)
wait(1)
local jogador = game.Players.LocalPlayer
local destinoCFrame = CFrame.new(-810.162292, 329.90097, 3.98657513, 1, 0, 0, 0, 1, 0, 0, 0, 1)
jogador.Character:SetPrimaryPartCFrame(destinoCFrame)
wait(1)
local args = {
    [1] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Goldify"):FireServer(unpack(args))
end    
})


TabMisc:AddButton({
	Name = "Teleport To Plate",
	Callback = function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.workspace.Arena.Plate.CFrame
  	end    
})


Tab1:AddToggle({
	Name = "Brick Farm",
	Default = false,
	Callback = function(Value)
BrickFarm = Value 
while BrickFarm do
game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,x)
task.wait(1)
  end
end
})


TabMisc:AddToggle({
	Name = "Spam Error Sound",
	Default = false,
	Callback = function(Value)
errorSound = Value
while errorSound do
  game:GetService("ReplicatedStorage"):WaitForChild("ErrorDeath"):FireServer() 
task.wait(2)
  end
end 
})

