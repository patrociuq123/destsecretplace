--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v93=v5(v82,v19);v19=nil;return v93;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=0 -0 ;local v84;while true do if (v83==(0 + 0)) then v84=(v31/((879 -(282 + (1419 -824)))^(v32-((3 -1) -1))))%((2 + 0)^(((v33-(1 -0)) -(v32-(1 -0))) + (2 -1))) ;return v84-(v84%(620 -(555 + 64))) ;end end else local v85=(933 -(857 + (135 -61)))^(v32-(569 -((1324 -(892 + 65)) + 201))) ;return (((v31%(v85 + v85))>=v85) and (928 -((564 -(87 + 263)) + 713))) or (0 + (180 -(67 + 113))) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + 2 + 0 ;return (v36 * (628 -372)) + v35 ;end local function v23() local v37=0 + 0 + 0 ;local v38;local v39;local v40;local v41;while true do if (v37==(998 -(915 + 82))) then return (v41 * (12338840 + 4438376)) + (v40 * ((462804 -202333) -194935)) + (v39 * (1208 -(796 + 6 + (941 -(368 + 423))))) + v38 ;end if (v37==(0 -0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (9 -6) );v18=v18 + (8 -(22 -(10 + 8))) ;v37=1 -0 ;end end end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(443 -(416 + 26))) then v45=3 -2 ;v46=(v20(v44,1,20) * ((1 + 1)^((265 -209) -24))) + v43 ;v42=440 -(145 + 293) ;end if (v42==(433 -(44 + 386))) then if (v47==0) then if (v46==(1486 -(998 + 488))) then return v48 * (0 + 0 + 0) ;else v47=1;v45=(0 -0) + 0 ;end elseif (v47==(2819 -(201 + 571))) then return ((v46==(1138 -((1863 -(760 + 987)) + 1022))) and (v48 * ((4 -(1916 -(1789 + 124)))/(0 + 0)))) or (v48 * NaN) ;end return v8(v48,v47-(3734 -2711) ) * (v45 + (v46/((7 -5)^(911 -(814 + 45))))) ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=1;end if (v42==(1 + 1)) then v47=v20(v44,8 + 13 ,31);v48=((v20(v44,917 -(261 + 624) )==((767 -(745 + 21)) -0)) and  -(1081 -(351 + 669 + (165 -105)))) or ((5585 -4161) -(630 + 7 + 786)) ;v42=9 -6 ;end end end local function v25(v49) local v50=701 -(376 + (1236 -911)) ;local v51;local v52;while true do if (v50==(2 + 0)) then v52={};for v94=1056 -(87 + 799 + 169) , #v51 do v52[v94]=v2(v1(v3(v51,v94,v94)));end v50=13 -10 ;end if (v50==(0 + 0)) then v51=nil;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=2 -1 ;end if (v50==(1414 -((1627 -(1123 + 57)) + 966))) then v51=v3(v16,v18,(v18 + v49) -(2 -1) );v18=v18 + v49 ;v50=1267 -(243 + 1022) ;end if (v50==(1820 -(1703 + 114))) then return v6(v52);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=0 + 0 ;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v53==(1200 -(1026 + 173))) then local v89=0;while true do if (0~=v89) then else v56=nil;v57=nil;v89=1 -0 ;end if (v89~=(66 -(30 + 35))) then else v53=2 + 0 ;break;end end end if (v53~=2) then else local v90=1257 -(1043 + 214) ;while true do if (v90==(3 -2)) then v53=1215 -(323 + 889) ;break;end if (v90==0) then v58=nil;v59=nil;v90=2 -1 ;end end end if (v53==(584 -(361 + 219))) then while true do if (v54==(320 -(53 + 267))) then v55=0;v56=nil;v54=1 + 0 ;end if (v54==(414 -(15 + 398))) then v57=nil;v58=nil;v54=984 -(18 + 964) ;end if (v54==(11 -8)) then v61=nil;while true do local v102=0;local v103;local v104;while true do if (v102==(1 + 0)) then while true do if (v103==0) then v104=0;while true do if ((1 + 0)==v104) then if (0==v55) then local v299=850 -(20 + 830) ;local v300;while true do if (v299==0) then v300=0;while true do if (v300==0) then v56={};v57={};v300=1;end if (1~=v300) then else v58={};v59={v56,v57,nil,v58};v300=1 + 1 ;end if (v300==(740 -(542 + 196))) then v55=1 -0 ;break;end end break;end end end break;end if (v104==0) then local v206=0 + 0 ;while true do if (v206~=(0 + 0)) then else if (v55~=2) then else local v342=0 + 0 ;local v343;while true do if (v342~=(0 -0)) then else v343=0 -0 ;while true do local v364=0;while true do if (v364~=0) then else if (v343==(1552 -(1126 + 425))) then return v59;end if (v343~=(405 -(118 + 287))) then else for v374=3 -2 ,v23() do local v375=0;local v376;local v377;local v378;local v379;while true do if (v375==0) then v376=0;v377=nil;v375=1122 -(118 + 1003) ;end if (v375==(5 -3)) then while true do if (v376==1) then v379=nil;while true do if (v377==(378 -(142 + 235))) then while true do if ((0 -0)==v378) then v379=v21();if (v20(v379,1 + 0 ,1)~=0) then else local v390=977 -(553 + 424) ;local v391;local v392;local v393;local v394;while true do if (v390==2) then while true do if (v391==1) then local v399=0 -0 ;local v400;while true do if (v399~=(0 + 0)) then else v400=0;while true do if (v400==1) then v391=2;break;end if (v400~=(0 + 0)) then else local v410=0 + 0 ;local v411;while true do if (v410==0) then v411=0 + 0 ;while true do if (1~=v411) then else v400=1 + 0 ;break;end if (v411==0) then v394={v22(),v22(),nil,nil};if (v392==0) then local v416=0 -0 ;local v417;while true do if (v416==0) then v417=0 + 0 ;while true do if (v417~=(0 -0)) then else v394[756 -(239 + 514) ]=v22();v394[4]=v22();break;end end break;end end elseif (v392==1) then v394[3]=v23();elseif (v392==2) then v394[2 + 1 ]=v23() -((1331 -(797 + 532))^(12 + 4)) ;elseif (v392~=3) then else local v422=0 + 0 ;local v423;local v424;local v425;while true do if (v422~=1) then else v425=nil;while true do if (1==v423) then while true do if (v424~=(0 -0)) then else v425=1202 -(373 + 829) ;while true do if (v425==(731 -(476 + 255))) then v394[3]=v23() -((1132 -(369 + 761))^(10 + 6)) ;v394[6 -2 ]=v22();break;end end break;end end break;end if (v423==0) then v424=0 -0 ;v425=nil;v423=1;end end break;end if (v422==0) then v423=238 -(64 + 174) ;v424=nil;v422=1 + 0 ;end end end v411=1 -0 ;end end break;end end end end break;end end end if ((336 -(144 + 192))~=v391) then else local v401=216 -(42 + 174) ;while true do if (v401==(0 + 0)) then local v407=0;local v408;while true do if (v407~=0) then else v408=0;while true do if (v408==1) then v401=1;break;end if (v408~=0) then else v392=v20(v379,2,3 + 0 );v393=v20(v379,4,3 + 3 );v408=1505 -(363 + 1141) ;end end break;end end end if (1~=v401) then else v391=1581 -(1183 + 397) ;break;end end end if (v391~=(5 -3)) then else local v402=0;local v403;while true do if (v402==0) then v403=0 + 0 ;while true do if (v403==(0 + 0)) then if (v20(v393,1976 -(1913 + 62) ,1)==(1 + 0)) then v394[2]=v61[v394[5 -3 ]];end if (v20(v393,1935 -(565 + 1368) ,7 -5 )~=(1662 -(1477 + 184))) then else v394[3 -0 ]=v61[v394[3 + 0 ]];end v403=857 -(564 + 292) ;end if (v403==1) then v391=3;break;end end break;end end end if (v391==(4 -1)) then if (v20(v393,8 -5 ,3)~=(305 -(244 + 60))) then else v394[4]=v61[v394[4 + 0 ]];end v56[v374]=v394;break;end end break;end if ((476 -(41 + 435))==v390) then v391=0;v392=nil;v390=1;end if (v390==(1002 -(938 + 63))) then local v395=0 + 0 ;while true do if (v395==0) then v393=nil;v394=nil;v395=1126 -(936 + 189) ;end if (1~=v395) then else v390=2;break;end end end end end break;end end break;end if (v377==0) then v378=0 + 0 ;v379=nil;v377=1;end end break;end if (v376~=0) then else v377=1613 -(1565 + 48) ;v378=nil;v376=1;end end break;end if (v375~=1) then else v378=nil;v379=nil;v375=2;end end end for v380=1 + 0 ,v23() do v57[v380-(1139 -(782 + 356)) ]=v28();end v343=268 -(176 + 91) ;end break;end end end break;end end end if (1~=v55) then else local v344=0;local v345;local v346;while true do if (v344==0) then v345=0;v346=nil;v344=2 -1 ;end if (v344==1) then while true do if (v345==0) then v346=0 -0 ;while true do if (v346==(1093 -(975 + 117))) then local v371=0;local v372;while true do if (v371~=(1875 -(157 + 1718))) then else v372=0;while true do if (v372==0) then local v382=0;while true do if ((0 + 0)~=v382) then else for v384=3 -2 ,v60 do local v385=0;local v386;local v387;local v388;local v389;while true do if (v385==(0 -0)) then v386=0;v387=nil;v385=1019 -(697 + 321) ;end if (v385==2) then while true do if (v386~=0) then else v387=0;v388=nil;v386=1;end if (v386==1) then v389=nil;while true do if (v387==1) then if (v388==(2 -1)) then v389=v21()~=(0 -0) ;elseif (v388==2) then v389=v24();elseif (v388~=3) then else v389=v25();end v61[v384]=v389;break;end if (v387~=(0 -0)) then else local v397=0;local v398;while true do if ((0 + 0)==v397) then v398=0;while true do if (v398==(0 -0)) then local v409=0;while true do if (1~=v409) then else v398=1;break;end if (v409==(0 -0)) then v388=v21();v389=nil;v409=1;end end end if (v398~=(1228 -(322 + 905))) then else v387=1;break;end end break;end end end end break;end end break;end if (v385~=1) then else v388=nil;v389=nil;v385=2;end end end v59[614 -(602 + 9) ]=v21();v382=1;end if (v382==(1190 -(449 + 740))) then v372=1;break;end end end if (v372~=1) then else v346=874 -(826 + 46) ;break;end end break;end end end if (v346~=2) then else v55=2;break;end if (v346~=0) then else local v373=0;while true do if (0==v373) then v60=v23();v61={};v373=1;end if (v373~=1) then else v346=948 -(245 + 702) ;break;end end end end break;end end break;end end end v206=1;end if (v206==(3 -2)) then v104=1;break;end end end end break;end end break;end if (v102==(0 + 0)) then v103=0;v104=nil;v102=1899 -(260 + 1638) ;end end end break;end if (v54==2) then local v100=440 -(382 + 58) ;local v101;while true do if (0~=v100) then else v101=0 -0 ;while true do if (v101==0) then v59=nil;v60=nil;v101=1 + 0 ;end if (v101==(1 -0)) then v54=8 -5 ;break;end end break;end end end end break;end if (v53~=3) then else local v91=1205 -(902 + 303) ;while true do if (v91==1) then v53=8 -4 ;break;end if (v91~=0) then else v60=nil;v61=nil;v91=1;end end end if (v53==0) then local v92=0 -0 ;while true do if (v92==(0 + 0)) then v54=0;v55=nil;v92=1;end if (v92~=(1691 -(1121 + 569))) then else v53=1;break;end end end end end local function v29(v62,v63,v64) local v65=v62[1];local v66=v62[2];local v67=v62[3];return function(...) local v68=v65;local v69=v66;local v70=v67;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v86=0,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + 1 ];else v78[v86]=v75[v86 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=39) then if (v81<=19) then if (v81<=9) then if (v81<=4) then if (v81<=1) then if (v81>0) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=2) then v78[v80[2]][v80[3]]=v80[4];elseif (v81==3) then local v209=0;local v210;while true do if (v209==0) then v210=v80[2];v78[v210](v13(v78,v210 + 1 ,v80[3]));break;end end else local v211=v80[2];v78[v211]=v78[v211](v78[v211 + 1 ]);end elseif (v81<=6) then if (v81==5) then v78[v80[2]]={};else local v108=v80[2];do return v78[v108](v13(v78,v108 + 1 ,v80[3]));end end elseif (v81<=7) then local v109=v80[2];local v110,v111=v71(v78[v109](v13(v78,v109 + 1 ,v80[3])));v73=(v111 + v109) -1 ;local v112=0;for v179=v109,v73 do v112=v112 + 1 ;v78[v179]=v110[v112];end elseif (v81>8) then v78[v80[2]][v80[3]]=v80[4];else local v215=v80[2];v73=(v215 + v79) -1 ;for v279=v215,v73 do local v280=0;local v281;while true do if (v280==0) then v281=v74[v279-v215 ];v78[v279]=v281;break;end end end end elseif (v81<=14) then if (v81<=11) then if (v81>10) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v113=v80[2];local v114={};for v182=1, #v77 do local v183=v77[v182];for v217=0, #v183 do local v218=0;local v219;local v220;local v221;while true do if (v218==0) then v219=v183[v217];v220=v219[1];v218=1;end if (v218==1) then v221=v219[2];if ((v220==v78) and (v221>=v113)) then v114[v221]=v220[v221];v219[1]=v114;end break;end end end end end elseif (v81<=12) then local v115=v78[v80[4]];if  not v115 then v72=v72 + 1 ;else v78[v80[2]]=v115;v72=v80[3];end elseif (v81>13) then local v224=0;local v225;while true do if (v224==0) then v225=v80[2];v78[v225](v78[v225 + 1 ]);break;end end else local v226=v80[2];v78[v226]=v78[v226]();end elseif (v81<=16) then if (v81==15) then v78[v80[2]]= #v78[v80[3]];else local v117=v78[v80[4]];if  not v117 then v72=v72 + 1 ;else v78[v80[2]]=v117;v72=v80[3];end end elseif (v81<=17) then local v118=v80[2];local v119=v78[v118];local v120=v80[3];for v184=1,v120 do v119[v184]=v78[v118 + v184 ];end elseif (v81>18) then v78[v80[2]]();else local v230=v80[2];local v231,v232=v71(v78[v230](v13(v78,v230 + 1 ,v80[3])));v73=(v232 + v230) -1 ;local v233=0;for v282=v230,v73 do v233=v233 + 1 ;v78[v282]=v231[v233];end end elseif (v81<=29) then if (v81<=24) then if (v81<=21) then if (v81>20) then v64[v80[3]]=v78[v80[2]];else local v123=v69[v80[3]];local v124;local v125={};v124=v10({},{__index=function(v187,v188) local v189=v125[v188];return v189[1][v189[2]];end,__newindex=function(v190,v191,v192) local v193=v125[v191];v193[1][v193[2]]=v192;end});for v195=1,v80[4] do v72=v72 + 1 ;local v196=v68[v72];if (v196[1]==71) then v125[v195-1 ]={v78,v196[3]};else v125[v195-1 ]={v63,v196[3]};end v77[ #v77 + 1 ]=v125;end v78[v80[2]]=v29(v123,v124,v64);end elseif (v81<=22) then v78[v80[2]]= #v78[v80[3]];elseif (v81==23) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v236=0;local v237;while true do if (v236==0) then v237=v80[2];v78[v237]=v78[v237](v78[v237 + 1 ]);break;end end end elseif (v81<=26) then if (v81>25) then local v128=v80[3];local v129=v78[v128];for v198=v128 + 1 ,v80[4] do v129=v129   .. v78[v198] ;end v78[v80[2]]=v129;else v78[v80[2]]=v64[v80[3]];end elseif (v81<=27) then local v133=0;local v134;while true do if (v133==0) then v134=v80[2];do return v13(v78,v134,v73);end break;end end elseif (v81==28) then local v238=v80[2];do return v13(v78,v238,v238 + v80[3] );end else do return v78[v80[2]];end end elseif (v81<=34) then if (v81<=31) then if (v81==30) then local v135=0;local v136;local v137;local v138;while true do if (v135==0) then v136=v80[2];v137={v78[v136](v78[v136 + 1 ])};v135=1;end if (v135==1) then v138=0;for v301=v136,v80[4] do local v302=0;while true do if (v302==0) then v138=v138 + 1 ;v78[v301]=v137[v138];break;end end end break;end end else local v139=v80[2];do return v78[v139](v13(v78,v139 + 1 ,v73));end end elseif (v81<=32) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>33) then v78[v80[2]]={};else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=36) then if (v81>35) then do return;end else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=37) then local v142=0;local v143;while true do if (0==v142) then v143=v80[2];v73=(v143 + v79) -1 ;v142=1;end if (v142==1) then for v303=v143,v73 do local v304=v74[v303-v143 ];v78[v303]=v304;end break;end end elseif (v81==38) then v78[v80[2]]=v63[v80[3]];else local v245=v80[2];local v246=v78[v245];for v290=v245 + 1 ,v80[3] do v7(v246,v78[v290]);end end elseif (v81<=59) then if (v81<=49) then if (v81<=44) then if (v81<=41) then if (v81==40) then local v144=v80[2];local v145=v78[v144];local v146=v80[3];for v199=1,v146 do v145[v199]=v78[v144 + v199 ];end else local v147=v80[2];local v148=v78[v80[3]];v78[v147 + 1 ]=v148;v78[v147]=v148[v80[4]];end elseif (v81<=42) then v72=v80[3];elseif (v81>43) then local v247=0;local v248;while true do if (0==v247) then v248=v80[2];v78[v248]=v78[v248]();break;end end else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=46) then if (v81>45) then v78[v80[2]]=v29(v69[v80[3]],nil,v64);else local v154=0;local v155;local v156;local v157;while true do if (v154==1) then v157={};v156=v10({},{__index=function(v306,v307) local v308=v157[v307];return v308[1][v308[2]];end,__newindex=function(v309,v310,v311) local v312=0;local v313;while true do if (v312==0) then v313=v157[v310];v313[1][v313[2]]=v311;break;end end end});v154=2;end if (0==v154) then v155=v69[v80[3]];v156=nil;v154=1;end if (v154==2) then for v314=1,v80[4] do local v315=0;local v316;while true do if (v315==1) then if (v316[1]==71) then v157[v314-1 ]={v78,v316[3]};else v157[v314-1 ]={v63,v316[3]};end v77[ #v77 + 1 ]=v157;break;end if (0==v315) then v72=v72 + 1 ;v316=v68[v72];v315=1;end end end v78[v80[2]]=v29(v155,v156,v64);break;end end end elseif (v81<=47) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==48) then do return v78[v80[2]];end else local v251=0;local v252;local v253;while true do if (1==v251) then for v336=1, #v77 do local v337=0;local v338;while true do if (v337==0) then v338=v77[v336];for v359=0, #v338 do local v360=0;local v361;local v362;local v363;while true do if (0==v360) then v361=v338[v359];v362=v361[1];v360=1;end if (v360==1) then v363=v361[2];if ((v362==v78) and (v363>=v252)) then v253[v363]=v362[v363];v361[1]=v253;end break;end end end break;end end end break;end if (v251==0) then v252=v80[2];v253={};v251=1;end end end elseif (v81<=54) then if (v81<=51) then if (v81==50) then v64[v80[3]]=v78[v80[2]];else local v160=0;local v161;while true do if (v160==0) then v161=v80[2];do return v78[v161](v13(v78,v161 + 1 ,v73));end break;end end end elseif (v81<=52) then v78[v80[2]]();elseif (v81>53) then do return;end else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=56) then if (v81>55) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v162=v80[2];do return v78[v162](v13(v78,v162 + 1 ,v80[3]));end end elseif (v81<=57) then for v202=v80[2],v80[3] do v78[v202]=nil;end elseif (v81==58) then local v256=v80[2];v78[v256]=v78[v256](v13(v78,v256 + 1 ,v73));else v78[v80[2]]=v64[v80[3]];end elseif (v81<=69) then if (v81<=64) then if (v81<=61) then if (v81>60) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=62) then local v165=v80[2];v78[v165]=v78[v165](v13(v78,v165 + 1 ,v80[3]));elseif (v81==63) then v78[v80[2]]=v29(v69[v80[3]],nil,v64);else local v262=0;local v263;local v264;while true do if (v262==1) then v78[v263 + 1 ]=v264;v78[v263]=v264[v80[4]];break;end if (v262==0) then v263=v80[2];v264=v78[v80[3]];v262=1;end end end elseif (v81<=66) then if (v81>65) then for v204=v80[2],v80[3] do v78[v204]=nil;end elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=67) then local v167=0;local v168;local v169;while true do if (v167==1) then for v317=v168 + 1 ,v80[4] do v169=v169   .. v78[v317] ;end v78[v80[2]]=v169;break;end if (v167==0) then v168=v80[3];v169=v78[v168];v167=1;end end elseif (v81==68) then v72=v80[3];else v78[v80[2]]=v78[v80[3]];end elseif (v81<=74) then if (v81<=71) then if (v81==70) then local v170=v80[2];v78[v170](v13(v78,v170 + 1 ,v80[3]));else v78[v80[2]]=v78[v80[3]];end elseif (v81<=72) then v78[v80[2]]=v80[3];elseif (v81==73) then local v269=v80[2];v78[v269]=v78[v269](v13(v78,v269 + 1 ,v80[3]));else local v271=0;local v272;local v273;local v274;while true do if (v271==1) then v274=0;for v339=v272,v80[4] do v274=v274 + 1 ;v78[v339]=v273[v274];end break;end if (v271==0) then v272=v80[2];v273={v78[v272](v78[v272 + 1 ])};v271=1;end end end elseif (v81<=76) then if (v81>75) then local v175=v80[2];do return v13(v78,v175,v73);end else local v176=0;local v177;while true do if (v176==0) then v177=v80[2];v78[v177]=v78[v177](v13(v78,v177 + 1 ,v73));break;end end end elseif (v81<=77) then local v178=v80[2];v78[v178](v78[v178 + 1 ]);elseif (v81==78) then v78[v80[2]]=v80[3];else v78[v80[2]]=v63[v80[3]];end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);