--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...) return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33) if v33 then local v84=0 -0 ;local v85;while true do if (v84==(0 -0)) then v85=(v31/((3 -(1 + 0))^(v32-(2 -1))))%((621 -(555 + 64))^(((v33-(932 -(857 + (105 -31)))) -(v32-1)) + (569 -((1432 -(68 + 997)) + (1471 -(226 + 1044)))))) ;return v85-(v85%(928 -(214 + 713))) ;end end else local v86=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v86 + v86))>=v86) and (878 -(282 + 595))) or (1637 -(1523 + 114)) ;end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24() local v34=0 -(0 -0) ;local v35;local v36;local v37;local v38;while true do if (v34==1) then return (v38 * (16777333 -((382 -(87 + 263)) + 85))) + (v37 * (64226 + 1310)) + (v36 * (57 + (379 -(67 + 113)))) + v35 ;end if ((957 -(892 + 65))==v34) then v35,v36,v37,v38=v1(v16,v19,v19 + (7 -4) );v19=v19 + 4 ;v34=1 -(0 + 0) ;end end end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29() local v39=0;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v39==(1990 -(582 + 1408))) then v40=0 -0 ;v41=nil;v39=1 -0 ;end if (v39~=(15 -11)) then else while true do if (v40==(1825 -(1195 + 629))) then local v99=0;while true do if (v99==(1 -0)) then v40=243 -(187 + 54) ;break;end if (v99==(780 -(162 + 618))) then v43=nil;v44=nil;v99=1 + 0 ;end end end if (v40==(2 + 0)) then local v100=0;while true do if (v100==1) then v40=3;break;end if (v100~=(0 -0)) then else v45=nil;v46=nil;v100=1 -0 ;end end end if (v40~=0) then else local v101=0 + 0 ;local v102;while true do if (v101~=0) then else v102=0;while true do if (v102~=1) then else v40=1637 -(1373 + 263) ;break;end if (v102==0) then local v107=0;while true do if (v107==(1000 -(451 + 549))) then v41=0 + 0 ;v42=nil;v107=1 -0 ;end if ((1 -0)~=v107) then else v102=1;break;end end end end break;end end end if ((1387 -(746 + 638))~=v40) then else v47=nil;while true do local v103=0;local v104;local v105;while true do if (v103==(0 + 0)) then v104=0 -0 ;v105=nil;v103=342 -(218 + 123) ;end if ((1582 -(1535 + 46))~=v103) then else while true do if (v104==0) then v105=0 + 0 ;while true do if (v105~=1) then else if (v41~=2) then else local v202=0;local v203;while true do if (v202~=0) then else v203=0 + 0 ;while true do local v316=0;while true do if (0~=v316) then else if ((560 -(306 + 254))~=v203) then else local v353=0;while true do if (v353==(0 + 0)) then for v358=1 -0 ,v24() do local v359=1467 -(899 + 568) ;local v360;local v361;local v362;while true do if (v359==1) then v362=nil;while true do if (v360==0) then local v368=0;while true do if (v368~=(1 + 0)) then else v360=1;break;end if (v368==(0 -0)) then v361=603 -(268 + 335) ;v362=nil;v368=1;end end end if (v360~=(291 -(60 + 230))) then else while true do if (0~=v361) then else v362=v22();if (v21(v362,573 -(426 + 146) ,1 + 0 )==(1456 -(282 + 1174))) then local v376=0;local v377;local v378;local v379;while true do if (v376==0) then local v382=811 -(569 + 242) ;local v383;while true do if (v382==0) then v383=0;while true do if (v383==(0 -0)) then local v399=0;while true do if (v399~=1) then else v383=1;break;end if (v399~=(0 + 0)) then else v377=v21(v362,2,3);v378=v21(v362,1028 -(706 + 318) ,1257 -(721 + 530) );v399=1272 -(945 + 326) ;end end end if (v383==1) then v376=1;break;end end break;end end end if (v376~=(4 -2)) then else local v384=0;while true do if (v384~=(1 + 0)) then else v376=3;break;end if (v384~=(700 -(271 + 429))) then else if (v21(v378,1,1 + 0 )~=1) then else v379[2]=v47[v379[1502 -(1408 + 92) ]];end if (v21(v378,1088 -(461 + 625) ,1290 -(993 + 295) )~=(1 + 0)) then else v379[1174 -(418 + 753) ]=v47[v379[3]];end v384=1;end end end if (v376==3) then if (v21(v378,2 + 1 ,1 + 2 )~=1) then else v379[4]=v47[v379[4]];end v42[v358]=v379;break;end if (v376==(1 + 0)) then local v386=0 + 0 ;local v387;while true do if (v386==(529 -(406 + 123))) then v387=0;while true do if (v387~=(1769 -(1749 + 20))) then else local v400=0;while true do if (v400==(0 + 0)) then v379={v23(),v23(),nil,nil};if (v377==0) then local v401=0 + 0 ;while true do if (v401~=0) then else v379[3]=v23();v379[4]=v23();break;end end elseif (v377==1) then v379[1148 -(466 + 679) ]=v24();elseif (v377==(4 -2)) then v379[3]=v24() -(2^16) ;elseif (v377~=(8 -5)) then else local v406=1900 -(106 + 1794) ;local v407;while true do if (v406==0) then v407=0 + 0 ;while true do if (v407==0) then v379[1 + 2 ]=v24() -(2^16) ;v379[4]=v23();break;end end break;end end end v400=2 -1 ;end if ((2 -1)~=v400) then else v387=1;break;end end end if (v387==(115 -(4 + 110))) then v376=2;break;end end break;end end end end end break;end end break;end end break;end if (v359~=(584 -(57 + 527))) then else v360=1427 -(41 + 1386) ;v361=nil;v359=104 -(17 + 86) ;end end end for v363=1 + 0 ,v24() do v43[v363-(1 -0) ]=v29();end v353=2 -1 ;end if (v353==1) then v203=1;break;end end end if (v203==(167 -(122 + 44))) then return v45;end break;end end end break;end end end break;end if (v105~=(0 -0)) then else local v108=0 -0 ;local v109;while true do if (v108==0) then v109=0 + 0 ;while true do if (v109~=(1 + 0)) then else v105=1 -0 ;break;end if (v109==0) then local v317=65 -(30 + 35) ;while true do if (v317==1) then v109=1;break;end if (v317==0) then if (v41==(1 + 0)) then local v354=0;local v355;while true do if (v354==(1257 -(1043 + 214))) then v355=0;while true do if (v355~=(3 -2)) then else local v365=1212 -(323 + 889) ;while true do if (0==v365) then for v369=1,v46 do local v370=0;local v371;local v372;local v373;local v374;local v375;while true do if (v370==(5 -3)) then v375=nil;while true do if (v371~=(581 -(361 + 219))) then else local v380=320 -(53 + 267) ;while true do if (v380~=0) then else v374=nil;v375=nil;v380=1 + 0 ;end if (v380==1) then v371=415 -(15 + 398) ;break;end end end if (v371==0) then local v381=982 -(18 + 964) ;while true do if (v381==1) then v371=1;break;end if (v381~=0) then else v372=0;v373=nil;v381=1;end end end if (v371==(7 -5)) then while true do if ((1 + 0)~=v372) then else v375=nil;while true do if (v373~=(1 + 0)) then else if (v374==(851 -(20 + 830))) then v375=v22()~=0 ;elseif (v374==2) then v375=v25();elseif (v374==3) then v375=v26();end v47[v369]=v375;break;end if (v373==(0 + 0)) then local v392=126 -(116 + 10) ;local v393;local v394;while true do if (v392==(1 + 0)) then while true do if ((738 -(542 + 196))~=v393) then else v394=0 -0 ;while true do if (v394==1) then v373=1 + 0 ;break;end if (v394==(0 + 0)) then v374=v22();v375=nil;v394=1 + 0 ;end end break;end end break;end if (v392~=(0 -0)) then else v393=0 -0 ;v394=nil;v392=1552 -(1126 + 425) ;end end end end break;end if (v372==(405 -(118 + 287))) then local v388=0 -0 ;while true do if ((1121 -(118 + 1003))==v388) then v373=0 -0 ;v374=nil;v388=1;end if (v388==1) then v372=1;break;end end end end break;end end break;end if (v370==(378 -(142 + 235))) then v373=nil;v374=nil;v370=2;end if (v370==0) then v371=0;v372=nil;v370=4 -3 ;end end end v45[1 + 2 ]=v22();v365=978 -(553 + 424) ;end if (v365~=1) then else v355=3 -1 ;break;end end end if (v355==2) then v41=2;break;end if (v355==(0 + 0)) then local v366=0 + 0 ;while true do if (v366~=1) then else v355=1 + 0 ;break;end if (v366~=0) then else v46=v24();v47={};v366=1;end end end end break;end end end if (v41==(0 + 0)) then local v356=0;while true do if (v356==2) then v41=1;break;end if (v356~=(0 + 0)) then else v42={};v43={};v356=2 -1 ;end if (v356==1) then local v357=0;while true do if (v357==(2 -1)) then v356=4 -2 ;break;end if (v357==(0 + 0)) then v44={};v45={v42,v43,nil,v44};v357=1 + 0 ;end end end end end v317=1330 -(797 + 532) ;end end end end break;end end end end break;end end break;end end end break;end end break;end if (v39~=(1 + 0)) then else v42=nil;v43=nil;v39=1 + 1 ;end if (v39==2) then v44=nil;v45=nil;v39=6 -3 ;end if (v39==(1205 -(373 + 829))) then v46=nil;v47=nil;v39=4;end end end v30=nil;v18=7;end if (v18==4) then function v25() local v48=(1732 -(938 + 63)) -(476 + 255) ;local v49;local v50;local v51;local v52;local v53;local v54;while true do if (2==v48) then v53=v21(v50,(886 + 265) -(369 + 761) ,(874 -(564 + 292)) + 13 );v54=((v21(v50,57 -25 )==(1 -0)) and  -((411 -172) -((1189 -(936 + 189)) + 174))) or (1 + 0) ;v48=3 -0 ;end if (v48==((1021 -682) -(144 + 192))) then if (v53==0) then if (v52==((72 + 144) -(42 + 174))) then return v54 * (0 + 0) ;else local v106=0 + 0 ;while true do if (v106==(0 + 0)) then v53=1;v51=1504 -(363 + (1445 -(244 + 60))) ;break;end end end elseif (v53==(3660 -(1565 + 48))) then return ((v52==(1580 -(1183 + 397))) and (v54 * ((2 -(1 + 0))/(0 + 0)))) or (v54 * NaN) ;end return v8(v54,v53-(765 + 258) ) * (v51 + (v52/(2^((1559 + 468) -(1913 + 62))))) ;end if (v48==0) then v49=v24();v50=v24();v48=1 + 0 ;end if (v48==(2 -1)) then v51=1;v52=(v21(v50,1934 -(565 + 1368) ,75 -(531 -(41 + 435)) ) * ((1663 -(1477 + (451 -(176 + 91))))^(43 -11))) + v49 ;v48=2 + 0 ;end end end v26=nil;function v26(v55) local v56;if  not v55 then v55=v24();if (v55==(0 -0)) then return "";end end v56=v3(v16,v19,(v19 + v55) -(2 -1) );v19=v19 + v55 ;local v57={};for v68=1876 -(157 + 1718) , #v56 do v57[v68]=v2(v1(v3(v56,v68,v68)));end return v6(v57);end v18=5;end if (v18==2) then function v22() local v58=v1(v16,v19,v19);v19=v19 + 1 ;return v58;end v23=nil;function v23() local v59,v60=v1(v16,v19,v19 + 2 + 0 );v19=v19 + 2 ;return (v60 * (908 -652)) + v59 ;end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v61) if (v1(v61,2)==79) then local v87=0;while true do if (v87==0) then v20=v0(v3(v61,1,1));return "";end end else local v88=v2(v0(v61,16));if v20 then local v91=0;local v92;while true do if (v91==1) then return v92;end if (v91==0) then v92=v5(v88,v20);v20=nil;v91=1;end end else return v88;end end end);v18=1;end if (v18==7) then function v30(v62,v63,v64) local v65=v62[1];local v66=v62[2];local v67=v62[3];return function(...) local v70=v65;local v71=v66;local v72=v67;local v73=v28;local v74=1;local v75= -1;local v76={};local v77={...};local v78=v12("#",...) -1 ;local v79={};local v80={};for v89=0,v78 do if (v89>=v72) then v76[v89-v72 ]=v77[v89 + 1 ];else v80[v89]=v77[v89 + 1 ];end end local v81=(v78-v72) + 1 ;local v82;local v83;while true do local v90=0;while true do if (v90==0) then v82=v70[v74];v83=v82[1];v90=1;end if (v90==1) then if (v83<=36) then if (v83<=17) then if (v83<=8) then if (v83<=3) then if (v83<=1) then if (v83==0) then v80[v82[2]]();else local v110=v82[2];local v111={};for v204=1, #v79 do local v205=v79[v204];for v216=0, #v205 do local v217=0;local v218;local v219;local v220;while true do if (v217==1) then v220=v218[2];if ((v219==v80) and (v220>=v110)) then v111[v220]=v219[v220];v218[1]=v111;end break;end if (0==v217) then v218=v205[v216];v219=v218[1];v217=1;end end end end end elseif (v83>2) then v80[v82[2]]= #v80[v82[3]];else local v113=0;local v114;local v115;local v116;while true do if (v113==0) then v114=v71[v82[3]];v115=nil;v113=1;end if (v113==2) then for v281=1,v82[4] do local v282=0;local v283;while true do if (v282==0) then v74=v74 + 1 ;v283=v70[v74];v282=1;end if (v282==1) then if (v283[1]==10) then v116[v281-1 ]={v80,v283[3]};else v116[v281-1 ]={v63,v283[3]};end v79[ #v79 + 1 ]=v116;break;end end end v80[v82[2]]=v30(v114,v115,v64);break;end if (v113==1) then v116={};v115=v10({},{__index=function(v284,v285) local v286=0;local v287;while true do if (0==v286) then v287=v116[v285];return v287[1][v287[2]];end end end,__newindex=function(v288,v289,v290) local v291=0;local v292;while true do if (v291==0) then v292=v116[v289];v292[1][v292[2]]=v290;break;end end end});v113=2;end end end elseif (v83<=5) then if (v83>4) then v80[v82[2]]=v80[v82[3]][v82[4]];else local v119=v82[3];local v120=v80[v119];for v206=v119 + 1 ,v82[4] do v120=v120   .. v80[v206] ;end v80[v82[2]]=v120;end elseif (v83<=6) then v80[v82[2]][v82[3]]=v82[4];elseif (v83==7) then do return;end else local v221=0;local v222;local v223;while true do if (v221==0) then v222=v82[3];v223=v80[v222];v221=1;end if (v221==1) then for v331=v222 + 1 ,v82[4] do v223=v223   .. v80[v331] ;end v80[v82[2]]=v223;break;end end end elseif (v83<=12) then if (v83<=10) then if (v83==9) then v80[v82[2]]=v82[3];else v80[v82[2]]=v80[v82[3]];end elseif (v83>11) then local v128=0;local v129;while true do if (v128==0) then v129=v82[2];v80[v129](v80[v129 + 1 ]);break;end end else local v130=0;local v131;while true do if (v130==0) then v131=v82[2];v80[v131]=v80[v131](v13(v80,v131 + 1 ,v75));break;end end end elseif (v83<=14) then if (v83==13) then v80[v82[2]]=v64[v82[3]];else v80[v82[2]]=v63[v82[3]];end elseif (v83<=15) then local v136=v82[2];do return v13(v80,v136,v75);end elseif (v83>16) then local v224=v82[2];local v225,v226=v73(v80[v224](v13(v80,v224 + 1 ,v82[3])));v75=(v226 + v224) -1 ;local v227=0;for v261=v224,v75 do v227=v227 + 1 ;v80[v261]=v225[v227];end else v80[v82[2]]=v30(v71[v82[3]],nil,v64);end elseif (v83<=26) then if (v83<=21) then if (v83<=19) then if (v83>18) then v64[v82[3]]=v80[v82[2]];else local v139=v82[2];local v140=v80[v139];for v207=v139 + 1 ,v82[3] do v7(v140,v80[v207]);end end elseif (v83==20) then local v141=0;local v142;while true do if (v141==1) then for v293=v142,v75 do local v294=v76[v293-v142 ];v80[v293]=v294;end break;end if (v141==0) then v142=v82[2];v75=(v142 + v81) -1 ;v141=1;end end else local v143=0;local v144;while true do if (v143==0) then v144=v82[2];do return v80[v144](v13(v80,v144 + 1 ,v75));end break;end end end elseif (v83<=23) then if (v83>22) then if (v80[v82[2]]==v82[4]) then v74=v74 + 1 ;else v74=v82[3];end else local v145=0;local v146;while true do if (v145==0) then v146=v82[2];v80[v146]=v80[v146](v80[v146 + 1 ]);break;end end end elseif (v83<=24) then local v147=0;local v148;while true do if (v147==0) then v148=v82[2];v80[v148]=v80[v148](v13(v80,v148 + 1 ,v82[3]));break;end end elseif (v83==25) then v80[v82[2]]={};else local v231=0;local v232;local v233;local v234;while true do if (v231==1) then v234=v82[3];for v332=1,v234 do v233[v332]=v80[v232 + v332 ];end break;end if (v231==0) then v232=v82[2];v233=v80[v232];v231=1;end end end elseif (v83<=31) then if (v83<=28) then if (v83==27) then if v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end else v80[v82[2]]=v30(v71[v82[3]],nil,v64);end elseif (v83<=29) then local v150=v82[2];do return v80[v150](v13(v80,v150 + 1 ,v75));end elseif (v83==30) then local v236=v80[v82[4]];if  not v236 then v74=v74 + 1 ;else v80[v82[2]]=v236;v74=v82[3];end else v80[v82[2]][v82[3]]=v80[v82[4]];end elseif (v83<=33) then if (v83==32) then if v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end else local v151=v82[2];local v152,v153=v73(v80[v151](v13(v80,v151 + 1 ,v82[3])));v75=(v153 + v151) -1 ;local v154=0;for v208=v151,v75 do v154=v154 + 1 ;v80[v208]=v152[v154];end end elseif (v83<=34) then local v155=v82[2];local v156=v80[v82[3]];v80[v155 + 1 ]=v156;v80[v155]=v156[v82[4]];elseif (v83>35) then if (v82[2]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end else for v270=v82[2],v82[3] do v80[v270]=nil;end end elseif (v83<=54) then if (v83<=45) then if (v83<=40) then if (v83<=38) then if (v83==37) then local v160=v82[2];local v161=v80[v160];local v162=v82[3];for v211=1,v162 do v161[v211]=v80[v160 + v211 ];end else v80[v82[2]]=v80[v82[3]];end elseif (v83>39) then local v165=v82[2];v80[v165](v13(v80,v165 + 1 ,v82[3]));else v80[v82[2]]();end elseif (v83<=42) then if (v83>41) then v80[v82[2]]={};else v80[v82[2]]=v63[v82[3]];end elseif (v83<=43) then v80[v82[2]][v82[3]]=v82[4];elseif (v83==44) then local v240=v82[2];v75=(v240 + v81) -1 ;for v272=v240,v75 do local v273=v76[v272-v240 ];v80[v272]=v273;end else local v241=v82[2];local v242={};for v275=1, #v79 do local v276=v79[v275];for v299=0, #v276 do local v300=0;local v301;local v302;local v303;while true do if (v300==1) then v303=v301[2];if ((v302==v80) and (v303>=v241)) then v242[v303]=v302[v303];v301[1]=v242;end break;end if (v300==0) then v301=v276[v299];v302=v301[1];v300=1;end end end end end elseif (v83<=49) then if (v83<=47) then if (v83>46) then v80[v82[2]]=v82[3]~=0 ;else local v172=v82[2];v80[v172]=v80[v172](v13(v80,v172 + 1 ,v75));end elseif (v83==48) then local v174=0;local v175;while true do if (v174==0) then v175=v82[2];v80[v175]=v80[v175]();break;end end else do return v80[v82[2]];end end elseif (v83<=51) then if (v83>50) then local v176=v82[2];v80[v176](v80[v176 + 1 ]);else for v214=v82[2],v82[3] do v80[v214]=nil;end end elseif (v83<=52) then v74=v82[3];elseif (v83>53) then do return v80[v82[2]];end else local v243=0;local v244;while true do if (v243==0) then v244=v82[2];v80[v244]=v80[v244](v80[v244 + 1 ]);break;end end end elseif (v83<=63) then if (v83<=58) then if (v83<=56) then if (v83>55) then local v178=v82[2];v80[v178]=v80[v178]();else v80[v82[2]]=v82[3];end elseif (v83==57) then do return;end else v64[v82[3]]=v80[v82[2]];end elseif (v83<=60) then if (v83>59) then local v184=v82[2];v80[v184]=v80[v184](v13(v80,v184 + 1 ,v82[3]));else local v186=v80[v82[4]];if  not v186 then v74=v74 + 1 ;else v80[v82[2]]=v186;v74=v82[3];end end elseif (v83<=61) then v80[v82[2]]= #v80[v82[3]];elseif (v83==62) then if (v80[v82[2]]==v82[4]) then v74=v74 + 1 ;else v74=v82[3];end else local v247=0;local v248;while true do if (v247==0) then v248=v82[2];v80[v248](v13(v80,v248 + 1 ,v82[3]));break;end end end elseif (v83<=68) then if (v83<=65) then if (v83>64) then if (v82[2]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end else local v188=v82[2];local v189=v80[v82[3]];v80[v188 + 1 ]=v189;v80[v188]=v189[v82[4]];end elseif (v83<=66) then v80[v82[2]]=v64[v82[3]];elseif (v83>67) then local v250=v82[2];do return v13(v80,v250,v75);end else local v251=0;local v252;while true do if (v251==0) then v252=v82[2];do return v13(v80,v252,v252 + v82[3] );end break;end end end elseif (v83<=70) then if (v83==69) then v80[v82[2]]=v82[3]~=0 ;else v80[v82[2]][v82[3]]=v80[v82[4]];end elseif (v83<=71) then local v198=0;local v199;local v200;local v201;while true do if (v198==2) then for v305=1,v82[4] do v74=v74 + 1 ;local v306=v70[v74];if (v306[1]==10) then v201[v305-1 ]={v80,v306[3]};else v201[v305-1 ]={v63,v306[3]};end v79[ #v79 + 1 ]=v201;end v80[v82[2]]=v30(v199,v200,v64);break;end if (1==v198) then v201={};v200=v10({},{__index=function(v308,v309) local v310=v201[v309];return v310[1][v310[2]];end,__newindex=function(v311,v312,v313) local v314=v201[v312];v314[1][v314[2]]=v313;end});v198=2;end if (v198==0) then v199=v71[v82[3]];v200=nil;v198=1;end end elseif (v83==72) then v80[v82[2]]=v80[v82[3]][v82[4]];else v74=v82[3];end v74=v74 + 1 ;break;end end end end;end return v30(v29(),{},v17)(...);end end end return vv9(),...);