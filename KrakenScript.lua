--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v67=0;while true do if (v67==0) then v19=v0(v3(v30,1,1));return "";end end else local v68=0;local v69;while true do if (v68==0) then v69=v2(v0(v30,16));if v19 then local v95=0;local v96;while true do if (v95==1) then return v96;end if (v95==0) then v96=v5(v69,v19);v19=nil;v95=1;end end else return v69;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v70=0 -0 ;local v71;while true do if (v70==0) then v71=(v31/(2^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(135 + 722 + 74)))) ;return v71-(v71%1) ;end end else local v72=(570 -(367 + (1078 -(282 + 595))))^(v32-(928 -(214 + 713))) ;return (((v31%(v72 + v72))>=v72) and 1) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 -0 ;local v36;local v37;while true do if (v35==(1066 -(68 + 997))) then return (v37 * (1893 -(1523 + 114))) + v36 ;end if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + ((2 + 6) -6) );v18=v18 + (119 -(32 + 85)) ;v35=1 + 0 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (960 -(892 + (415 -(87 + 263)))) );v18=v18 + 4 ;return (v41 * (40022563 -23245347)) + (v40 * (121138 -55602)) + (v39 * (469 -213)) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=181 -(67 + 113) ;local v45=(v20(v43,1 + 0 ,49 -(29 + 0) ) * ((2 + 0)^(127 -95))) + v42 ;local v46=v20(v43,973 -((1593 -(368 + 423)) + 150) ,31);local v47=((v20(v43,85 -53 )==(1 -0)) and  -1) or (1 + 0) ;if (v46==(997 -(915 + 82))) then if (v45==(0 -0)) then return v47 * (0 + 0) ;else v46=1 -0 ;v44=0;end elseif (v46==(3234 -((3359 -2290) + (136 -(10 + 8))))) then return ((v45==0) and (v47 * (((7 -5) -1)/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/((1 + 1)^(92 -40)))) ;end local function v25(v48) local v49=(1580 -(116 + 1022)) -(416 + 26) ;local v50;local v51;while true do if (v49==(3 -2)) then v50=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;v49=3 -(4 -3) ;end if ((440 -(145 + 172 + 121))==v49) then v51={};for v76=431 -(44 + 386) , #v50 do v51[v76]=v2(v1(v3(v50,v76,v76)));end v49=(5435 -3946) -(998 + 488) ;end if (v49==(0 + 0)) then v50=nil;if  not v48 then v48=v23();if (v48==(0 + (0 -0))) then return "";end end v49=773 -(201 + 571) ;end if (v49==3) then return v6(v51);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=1763 -(454 + 1309) ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v52~=1) then else v55=nil;v56=nil;v52=1 + 1 ;end if (v52~=(3 -0)) then else v59=nil;while true do local v78=0 -0 ;while true do if (v78==(0 -0)) then if (v53==1) then local v103=285 -(134 + 151) ;while true do if (v103==(1665 -(970 + 695))) then v57={v54,v55,nil,v56};v58=v23();v103=1991 -(582 + 1408) ;end if (v103==(3 -2)) then v59={};v53=2 -0 ;break;end end end if (v53~=3) then else local v104=0;local v105;while true do if (v104~=(0 -0)) then else v105=1824 -(1195 + 629) ;while true do if (v105==0) then local v109=0;while true do if (v109==0) then for v116=1,v23() do v55[v116-(1 -0) ]=v28();end return v57;end end end end break;end end end v78=242 -(187 + 54) ;end if (v78==1) then if (v53==(780 -(162 + 618))) then local v106=0 + 0 ;while true do if (v106~=(0 + 0)) then else v54={};v55={};v106=1 -0 ;end if (1==v106) then v56={};v53=1;break;end end end if (v53~=(2 -0)) then else local v107=0;local v108;while true do if (v107==(0 + 0)) then v108=0;while true do if ((1636 -(1373 + 263))~=v108) then else local v110=0;while true do if (0==v110) then for v118=1001 -(451 + 549) ,v58 do local v119=0 + 0 ;local v120;local v121;local v122;local v123;while true do if (1==v119) then v122=nil;v123=nil;v119=2 -0 ;end if (v119~=0) then else v120=0;v121=nil;v119=1 -0 ;end if (v119~=2) then else while true do if (v120==0) then v121=0;v122=nil;v120=1;end if (v120~=1) then else v123=nil;while true do if (v121==1) then if (v122==(1385 -(746 + 638))) then v123=v21()~=(0 + 0) ;elseif (v122==(2 -0)) then v123=v24();elseif (v122~=(344 -(218 + 123))) then else v123=v25();end v59[v118]=v123;break;end if (v121~=0) then else local v386=0;local v387;while true do if (v386==0) then v387=0;while true do if (v387~=0) then else v122=v21();v123=nil;v387=1582 -(1535 + 46) ;end if (v387~=1) then else v121=1 + 0 ;break;end end break;end end end end break;end end break;end end end v57[1 + 2 ]=v21();v110=561 -(306 + 254) ;end if (v110==1) then v108=1 + 0 ;break;end end end if (v108==1) then for v111=1,v23() do local v112=0 -0 ;local v113;local v114;while true do if (v112~=(1467 -(899 + 568))) then else local v124=0;while true do if (v124==(1 + 0)) then v112=2 -1 ;break;end if (0==v124) then v113=603 -(268 + 335) ;v114=nil;v124=291 -(60 + 230) ;end end end if (v112==(573 -(426 + 146))) then while true do if (v113==(0 + 0)) then v114=v21();if (v20(v114,1,1)~=(1456 -(282 + 1174))) then else local v334=0;local v335;local v336;local v337;while true do if ((812 -(569 + 242))~=v334) then else local v377=0;while true do if (v377~=0) then else v337={v22(),v22(),nil,nil};if (v335==(1251 -(721 + 530))) then local v399=0;local v400;local v401;local v402;while true do if (v399~=(1272 -(945 + 326))) then else v402=nil;while true do if (v400~=0) then else local v413=0;while true do if (v413==(2 -1)) then v400=1;break;end if (v413==0) then v401=0;v402=nil;v413=1 + 0 ;end end end if (v400==(701 -(271 + 429))) then while true do if (v401==0) then v402=0 + 0 ;while true do if (v402==0) then v337[3]=v22();v337[1504 -(1408 + 92) ]=v22();break;end end break;end end break;end end break;end if (v399==0) then v400=0;v401=nil;v399=1087 -(461 + 625) ;end end elseif (v335==(1289 -(993 + 295))) then v337[3]=v23();elseif (v335==(1 + 1)) then v337[1174 -(418 + 753) ]=v23() -((1 + 1)^(2 + 14)) ;elseif (v335==(1 + 2)) then local v414=0 + 0 ;local v415;local v416;local v417;while true do if (v414~=(529 -(406 + 123))) then else v415=1769 -(1749 + 20) ;v416=nil;v414=1 + 0 ;end if (v414==(1323 -(1249 + 73))) then v417=nil;while true do if (v415~=(1 + 0)) then else while true do if (0==v416) then v417=1145 -(466 + 679) ;while true do if (0==v417) then v337[3]=v23() -(2^16) ;v337[4]=v22();break;end end break;end end break;end if (v415==0) then v416=0 -0 ;v417=nil;v415=2 -1 ;end end break;end end end v377=1901 -(106 + 1794) ;end if (v377~=(1 + 0)) then else v334=2;break;end end end if (v334~=(1 + 1)) then else local v378=0;while true do if (v378==0) then local v395=0 -0 ;while true do if (v395==0) then if (v20(v336,1,1)==1) then v337[5 -3 ]=v59[v337[116 -(4 + 110) ]];end if (v20(v336,2,2)==1) then v337[587 -(57 + 527) ]=v59[v337[3]];end v395=1;end if (v395==1) then v378=1428 -(41 + 1386) ;break;end end end if ((104 -(17 + 86))==v378) then v334=3 + 0 ;break;end end end if (v334==0) then v335=v20(v114,2,3);v336=v20(v114,8 -4 ,17 -11 );v334=167 -(122 + 44) ;end if (v334==(5 -2)) then if (v20(v336,9 -6 ,3)==(1 + 0)) then v337[1 + 3 ]=v59[v337[4]];end v54[v111]=v337;break;end end end break;end end break;end end end v53=5 -2 ;break;end end break;end end end break;end end end break;end if (0~=v52) then else v53=0;v54=nil;v52=1;end if (v52~=2) then else v57=nil;v58=nil;v52=68 -(30 + 35) ;end end end local function v29(v60,v61,v62) local v63=0;local v64;local v65;local v66;while true do if (0==v63) then v64=v60[1];v65=v60[2];v63=1;end if (v63==1) then v66=v60[3];return function(...) local v79=v64;local v80=v65;local v81=v66;local v82=v27;local v83=1;local v84= -1;local v85={};local v86={...};local v87=v12("#",...) -1 ;local v88={};local v89={};for v93=0,v87 do if (v93>=v81) then v85[v93-v81 ]=v86[v93 + 1 ];else v89[v93]=v86[v93 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do local v94=0;while true do if (v94==1) then if (v92<=36) then if (v92<=17) then if (v92<=8) then if (v92<=3) then if (v92<=1) then if (v92==0) then local v125=0;local v126;while true do if (v125==0) then v126=v91[2];v89[v126]=v89[v126](v13(v89,v126 + 1 ,v84));break;end end else local v127=0;local v128;local v129;local v130;while true do if (v127==1) then v130=v91[3];for v338=1,v130 do v129[v338]=v89[v128 + v338 ];end break;end if (v127==0) then v128=v91[2];v129=v89[v128];v127=1;end end end elseif (v92==2) then local v131=0;local v132;local v133;while true do if (v131==1) then v89[v132 + 1 ]=v133;v89[v132]=v133[v91[4]];break;end if (v131==0) then v132=v91[2];v133=v89[v91[3]];v131=1;end end else v89[v91[2]][v91[3]]=v91[4];end elseif (v92<=5) then if (v92>4) then v89[v91[2]][v91[3]]=v89[v91[4]];else local v138=v89[v91[4]];if  not v138 then v83=v83 + 1 ;else v89[v91[2]]=v138;v83=v91[3];end end elseif (v92<=6) then local v139=0;local v140;while true do if (0==v139) then v140=v91[2];do return v89[v140](v13(v89,v140 + 1 ,v84));end break;end end elseif (v92>7) then local v253=0;local v254;while true do if (v253==0) then v254=v91[2];v89[v254]=v89[v254](v89[v254 + 1 ]);break;end end else v89[v91[2]]=v89[v91[3]];end elseif (v92<=12) then if (v92<=10) then if (v92==9) then v89[v91[2]]=v91[3];else local v143=0;local v144;local v145;while true do if (v143==1) then v89[v144 + 1 ]=v145;v89[v144]=v145[v91[4]];break;end if (v143==0) then v144=v91[2];v145=v89[v91[3]];v143=1;end end end elseif (v92>11) then local v146=0;local v147;while true do if (v146==0) then v147=v89[v91[4]];if  not v147 then v83=v83 + 1 ;else local v359=0;while true do if (0==v359) then v89[v91[2]]=v147;v83=v91[3];break;end end end break;end end else local v148=v91[2];v89[v148](v13(v89,v148 + 1 ,v91[3]));end elseif (v92<=14) then if (v92>13) then local v149=v91[2];v89[v149]=v89[v149]();else local v151=v91[2];do return v13(v89,v151,v151 + v91[3] );end end elseif (v92<=15) then do return;end elseif (v92==16) then v89[v91[2]][v91[3]]=v89[v91[4]];else v89[v91[2]]=v89[v91[3]][v91[4]];end elseif (v92<=26) then if (v92<=21) then if (v92<=19) then if (v92==18) then local v152=v91[2];local v153,v154=v82(v89[v152](v13(v89,v152 + 1 ,v91[3])));v84=(v154 + v152) -1 ;local v155=0;for v216=v152,v84 do v155=v155 + 1 ;v89[v216]=v153[v155];end else local v156=v80[v91[3]];local v157;local v158={};v157=v10({},{__index=function(v219,v220) local v221=0;local v222;while true do if (v221==0) then v222=v158[v220];return v222[1][v222[2]];end end end,__newindex=function(v223,v224,v225) local v226=0;local v227;while true do if (0==v226) then v227=v158[v224];v227[1][v227[2]]=v225;break;end end end});for v228=1,v91[4] do local v229=0;local v230;while true do if (v229==1) then if (v230[1]==25) then v158[v228-1 ]={v89,v230[3]};else v158[v228-1 ]={v61,v230[3]};end v88[ #v88 + 1 ]=v158;break;end if (v229==0) then v83=v83 + 1 ;v230=v79[v83];v229=1;end end end v89[v91[2]]=v29(v156,v157,v62);end elseif (v92>20) then if (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]();end elseif (v92<=23) then if (v92>22) then v89[v91[2]]=v62[v91[3]];else local v162=0;local v163;while true do if (v162==0) then v163=v91[2];v89[v163]=v89[v163](v13(v89,v163 + 1 ,v91[3]));break;end end end elseif (v92<=24) then local v164=0;local v165;local v166;while true do if (v164==1) then for v346=v165 + 1 ,v91[3] do v7(v166,v89[v346]);end break;end if (0==v164) then v165=v91[2];v166=v89[v165];v164=1;end end elseif (v92>25) then v89[v91[2]]=v62[v91[3]];else v89[v91[2]]=v89[v91[3]];end elseif (v92<=31) then if (v92<=28) then if (v92>27) then do return;end else local v167=0;local v168;while true do if (v167==0) then v168=v91[2];v89[v168]=v89[v168]();break;end end end elseif (v92<=29) then local v169=v91[3];local v170=v89[v169];for v231=v169 + 1 ,v91[4] do v170=v170   .. v89[v231] ;end v89[v91[2]]=v170;elseif (v92>30) then local v266=v91[2];v84=(v266 + v90) -1 ;for v311=v266,v84 do local v312=0;local v313;while true do if (v312==0) then v313=v85[v311-v266 ];v89[v311]=v313;break;end end end else v83=v91[3];end elseif (v92<=33) then if (v92==32) then v89[v91[2]]=v61[v91[3]];else v89[v91[2]]=v29(v80[v91[3]],nil,v62);end elseif (v92<=34) then v89[v91[2]]= #v89[v91[3]];elseif (v92>35) then local v268=0;local v269;local v270;local v271;while true do if (v268==1) then v271=v91[3];for v368=1,v271 do v270[v368]=v89[v269 + v368 ];end break;end if (v268==0) then v269=v91[2];v270=v89[v269];v268=1;end end else v89[v91[2]]={};end elseif (v92<=54) then if (v92<=45) then if (v92<=40) then if (v92<=38) then if (v92==37) then local v176=v80[v91[3]];local v177;local v178={};v177=v10({},{__index=function(v232,v233) local v234=0;local v235;while true do if (v234==0) then v235=v178[v233];return v235[1][v235[2]];end end end,__newindex=function(v236,v237,v238) local v239=v178[v237];v239[1][v239[2]]=v238;end});for v241=1,v91[4] do local v242=0;local v243;while true do if (v242==0) then v83=v83 + 1 ;v243=v79[v83];v242=1;end if (v242==1) then if (v243[1]==25) then v178[v241-1 ]={v89,v243[3]};else v178[v241-1 ]={v61,v243[3]};end v88[ #v88 + 1 ]=v178;break;end end end v89[v91[2]]=v29(v176,v177,v62);else local v180=0;local v181;local v182;while true do if (v180==1) then for v350=v181 + 1 ,v91[4] do v182=v182   .. v89[v350] ;end v89[v91[2]]=v182;break;end if (v180==0) then v181=v91[3];v182=v89[v181];v180=1;end end end elseif (v92>39) then v89[v91[2]]=v29(v80[v91[3]],nil,v62);else local v184=0;local v185;while true do if (v184==0) then v185=v91[2];v89[v185]=v89[v185](v13(v89,v185 + 1 ,v91[3]));break;end end end elseif (v92<=42) then if (v92>41) then local v186=0;local v187;while true do if (v186==0) then v187=v91[2];v89[v187](v89[v187 + 1 ]);break;end end else local v188=0;local v189;while true do if (v188==0) then v189=v91[2];v89[v189](v13(v89,v189 + 1 ,v91[3]));break;end end end elseif (v92<=43) then v89[v91[2]][v91[3]]=v91[4];elseif (v92==44) then v89[v91[2]]();else local v273=v91[2];local v274={};for v321=1, #v88 do local v322=v88[v321];for v351=0, #v322 do local v352=v322[v351];local v353=v352[1];local v354=v352[2];if ((v353==v89) and (v354>=v273)) then local v373=0;while true do if (0==v373) then v274[v354]=v353[v354];v352[1]=v274;break;end end end end end end elseif (v92<=49) then if (v92<=47) then if (v92==46) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else do return v89[v91[2]];end end elseif (v92>48) then v83=v91[3];else v89[v91[2]]=v91[3];end elseif (v92<=51) then if (v92==50) then local v195=0;local v196;while true do if (v195==0) then v196=v91[2];v89[v196]=v89[v196](v89[v196 + 1 ]);break;end end else local v197=0;local v198;while true do if (v197==0) then v198=v91[2];v89[v198](v89[v198 + 1 ]);break;end end end elseif (v92<=52) then v89[v91[2]]=v89[v91[3]][v91[4]];elseif (v92>53) then v89[v91[2]]=v61[v91[3]];else local v278=v91[2];local v279={};for v326=1, #v88 do local v327=0;local v328;while true do if (v327==0) then v328=v88[v326];for v380=0, #v328 do local v381=0;local v382;local v383;local v384;while true do if (v381==1) then v384=v382[2];if ((v383==v89) and (v384>=v278)) then local v403=0;while true do if (v403==0) then v279[v384]=v383[v384];v382[1]=v279;break;end end end break;end if (v381==0) then v382=v328[v380];v383=v382[1];v381=1;end end end break;end end end end elseif (v92<=63) then if (v92<=58) then if (v92<=56) then if (v92>55) then v89[v91[2]]=v91[3]~=0 ;elseif (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==57) then v89[v91[2]]={};else do return v89[v91[2]];end end elseif (v92<=60) then if (v92==59) then v89[v91[2]]=v91[3]~=0 ;else local v204=v91[2];v89[v204]=v89[v204](v13(v89,v204 + 1 ,v84));end elseif (v92<=61) then local v206=0;local v207;while true do if (v206==0) then v207=v91[2];do return v13(v89,v207,v84);end break;end end elseif (v92>62) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else local v281=0;local v282;while true do if (0==v281) then v282=v91[2];do return v89[v282](v13(v89,v282 + 1 ,v84));end break;end end end elseif (v92<=68) then if (v92<=65) then if (v92>64) then v62[v91[3]]=v89[v91[2]];else local v210=v91[2];local v211,v212=v82(v89[v210](v13(v89,v210 + 1 ,v91[3])));v84=(v212 + v210) -1 ;local v213=0;for v244=v210,v84 do v213=v213 + 1 ;v89[v244]=v211[v213];end end elseif (v92<=66) then if (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>67) then v62[v91[3]]=v89[v91[2]];elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=70) then if (v92>69) then for v247=v91[2],v91[3] do v89[v247]=nil;end else local v214=0;local v215;while true do if (v214==0) then v215=v91[2];do return v13(v89,v215,v84);end break;end end end elseif (v92<=71) then for v249=v91[2],v91[3] do v89[v249]=nil;end elseif (v92>72) then v89[v91[2]]= #v89[v91[3]];else local v287=v91[2];v84=(v287 + v90) -1 ;for v331=v287,v84 do local v332=0;local v333;while true do if (v332==0) then v333=v85[v331-v287 ];v89[v331]=v333;break;end end end end v83=v83 + 1 ;break;end if (v94==0) then v91=v79[v83];v92=v91[1];v94=1;end end end end;end end end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);