--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...) return {...},v12("#",...);end v18=6;end if (v18==2) then function v22() local v31=v1(v16,v19,v19);v19=v19 + 1 ;return v31;end v23=nil;function v23() local v32=0;local v33;local v34;while true do if (v32==(0 -0)) then v33,v34=v1(v16,v19,v19 + (5 -3) );v19=v19 + (3 -1) ;v32=2 -1 ;end if ((620 -(555 + 64))==v32) then return (v34 * ((1755 -(367 + 201)) -(857 + 74))) + v33 ;end end end v18=3;end if (v18==4) then function v25() local v35=v24();local v36=v24();local v37=(1719 -(368 + 423)) -(214 + 713) ;local v38=(v21(v36,1 -0 ,370 -(87 + 263) ) * ((1 + 1)^((75 -51) + 8))) + v35 ;local v39=v21(v36,51 -30 ,5 + (44 -(10 + 8)) );local v40=((v21(v36,(3496 -2587) -(282 + 595) )==(953 -(802 + 150))) and  -((2080 -(416 + 26)) -(1523 + 114))) or (1 + 0) ;if (v39==(0 -0)) then if (v38==(997 -(915 + 82))) then return v40 * (1065 -(68 + 997)) ;else local v91=(4055 -2785) -(97 + 129 + 1044) ;while true do if (v91==(0 -0)) then v39=118 -(32 + 85) ;v37=0 + (0 -0) ;break;end end end elseif (v39==(454 + 1593)) then return ((v38==(0 -0)) and (v40 * ((958 -(892 + 65))/(0 -0)))) or (v40 * NaN) ;end return v8(v40,v39-(1890 -867) ) * (v37 + (v38/((2 + 0)^52))) ;end v26=nil;function v26(v41) local v42=438 -(145 + 293) ;local v43;local v44;while true do if ((432 -(44 + (1370 -984)))==v42) then v44={};for v92=1487 -((1857 -(814 + 45)) + (1202 -714)) , #v43 do v44[v92]=v2(v1(v3(v43,v92,v92)));end v42=1 + 2 ;end if (v42==(3 + 0)) then return v6(v44);end if (v42==(772 -(201 + 571))) then v43=nil;if  not v41 then v41=v24();if (v41==(1138 -(116 + 1022))) then return "";end end v42=1;end if (v42==(4 -3)) then v43=v3(v16,v19,(v19 + v41) -(1 + 0) );v19=v19 + v41 ;v42=7 -5 ;end end end v18=5;end if (v18==6) then v29=nil;function v29() local v45=0;local v46;local v47;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v45==(3 + 1)) then while true do if (v46==(1003 -(923 + 79))) then local v100=0 -0 ;local v101;while true do if (v100==(1202 -(373 + 829))) then v101=731 -(476 + 255) ;while true do if (v101==(1131 -(369 + 761))) then v46=2 + 0 ;break;end if (v101~=(1636 -(1373 + 263))) then else local v108=0;while true do if (v108==(1001 -(451 + 549))) then v101=1;break;end if ((0 + 0)==v108) then v49=nil;v50=nil;v108=1 -0 ;end end end end break;end end end if (v46==(2 -0)) then v51=nil;v52=nil;v46=241 -(64 + 174) ;end if (v46==3) then v53=nil;while true do local v103=1384 -(746 + 638) ;while true do if (v103~=(0 + 0)) then else local v106=0 -0 ;local v107;while true do if (v106==(0 -0)) then v107=0;while true do if (v107==(336 -(144 + 192))) then if (v47==(341 -(218 + 123))) then local v215=1581 -(1535 + 46) ;while true do if (v215==(1 + 0)) then v50={};v47=1 + 0 ;break;end if (0~=v215) then else v48={};v49={};v215=1 + 0 ;end end end if ((562 -(306 + 254))~=v47) then else local v216=0 + 0 ;local v217;while true do if (v216==0) then v217=0 -0 ;while true do if (v217~=(1467 -(899 + 568))) then else local v303=0 + 0 ;local v304;while true do if ((1580 -(1183 + 397))==v303) then v304=0;while true do if (v304==(0 -0)) then for v320=1,v52 do local v321=0;local v322;local v323;local v324;while true do if (v321==(603 -(268 + 335))) then local v331=0 + 0 ;while true do if (v331==1) then v321=291 -(60 + 230) ;break;end if (v331==(572 -(426 + 146))) then local v332=1975 -(1913 + 62) ;while true do if (v332~=(0 + 0)) then else v322=0 + 0 ;v323=nil;v332=2 -1 ;end if (v332==1) then v331=1457 -(282 + 1174) ;break;end end end end end if (v321~=1) then else v324=nil;while true do if (v322==(811 -(569 + 242))) then local v333=0 -0 ;local v334;while true do if (v333~=(0 -0)) then else v334=0 + 0 ;while true do if (v334==(1024 -(706 + 318))) then v323=v22();v324=nil;v334=1;end if (v334==(1 -0)) then v322=1 + 0 ;break;end end break;end end end if (v322==(1252 -(721 + 530))) then if (v323==(1 -0)) then v324=v22()~=(1271 -(945 + 326)) ;elseif (v323==2) then v324=v25();elseif (v323~=(8 -5)) then else v324=v26();end v53[v320]=v324;break;end end break;end end end v51[3]=v22();v304=1;end if (v304~=(305 -(244 + 60))) then else v217=2 -1 ;break;end end break;end end end if ((1 + 0)~=v217) then else for v308=1,v24() do local v309=0;local v310;local v311;while true do if (v309==(700 -(271 + 429))) then v310=476 -(41 + 435) ;v311=nil;v309=1 + 0 ;end if (v309~=(1002 -(938 + 63))) then else while true do if (v310==(0 + 0)) then v311=v22();if (v21(v311,1501 -(1408 + 92) ,1)==0) then local v325=0 + 0 ;local v326;local v327;local v328;local v329;local v330;while true do if ((1088 -(461 + 625))==v325) then v330=nil;while true do if (2==v326) then while true do if (v327~=(1289 -(993 + 295))) then else local v337=1138 -(782 + 356) ;local v338;while true do if (v337==0) then v338=0 + 0 ;while true do if (v338==(267 -(176 + 91))) then local v346=1171 -(418 + 753) ;while true do if (v346==(0 + 0)) then v330={v23(),v23(),nil,nil};if (v328==0) then local v349=0 + 0 ;local v350;while true do if ((0 + 0)~=v349) then else v350=1092 -(975 + 117) ;while true do if ((529 -(406 + 123))==v350) then v330[1772 -(1749 + 20) ]=v23();v330[4]=v23();break;end end break;end end elseif (v328==1) then v330[3]=v24();elseif (v328==(1 + 1)) then v330[3 + 0 ]=v24() -((1324 -(1249 + 73))^(6 + 10)) ;elseif (v328==(1148 -(466 + 679))) then local v356=0 -0 ;local v357;local v358;while true do if ((1019 -(697 + 321))==v356) then while true do if (v357==(0 -0)) then v358=0 -0 ;while true do if (v358~=(1900 -(106 + 1794))) then else v330[1 + 2 ]=v24() -((1 + 1)^(36 -20)) ;v330[11 -7 ]=v23();break;end end break;end end break;end if (v356~=(0 -0)) then else v357=0 + 0 ;v358=nil;v356=1;end end end v346=115 -(4 + 110) ;end if (v346~=(1 -0)) then else v338=2 -1 ;break;end end end if (v338~=(585 -(57 + 527))) then else v327=2;break;end end break;end end end if (v327==2) then local v339=0;local v340;while true do if (v339~=(1427 -(41 + 1386))) then else v340=611 -(602 + 9) ;while true do if (v340~=(103 -(17 + 86))) then else local v347=0;local v348;while true do if (v347==(872 -(826 + 46))) then v348=0 + 0 ;while true do if (v348==(1 -0)) then v340=3 -2 ;break;end if (v348~=(0 -0)) then else local v351=0;while true do if ((166 -(122 + 44))==v351) then if (v21(v329,441 -(382 + 58) ,3 -2 )==(1 + 0)) then v330[3 -1 ]=v53[v330[2 -0 ]];end if (v21(v329,6 -4 ,2 + 0 )~=(1 + 0)) then else v330[5 -2 ]=v53[v330[1693 -(1121 + 569) ]];end v351=66 -(30 + 35) ;end if (v351==1) then v348=1;break;end end end end break;end end end if (v340==(1 + 0)) then v327=3;break;end end break;end end end if (v327==(1260 -(1043 + 214))) then if (v21(v329,11 -8 ,3)~=(684 -(483 + 200))) then else v330[4]=v53[v330[1467 -(1404 + 59) ]];end v48[v308]=v330;break;end if (v327==0) then local v342=1212 -(323 + 889) ;while true do if (v342==(2 -1)) then v327=766 -(468 + 297) ;break;end if (v342~=0) then else local v345=580 -(361 + 219) ;while true do if (v345~=(320 -(53 + 267))) then else v328=v21(v311,1 + 1 ,416 -(15 + 398) );v329=v21(v311,4,988 -(18 + 964) );v345=3 -2 ;end if ((1 + 0)==v345) then v342=1 + 0 ;break;end end end end end end break;end if ((850 -(20 + 830))~=v326) then else local v336=0 + 0 ;while true do if ((0 + 0)==v336) then v327=0;v328=nil;v336=127 -(116 + 10) ;end if (v336==(1 + 0)) then v326=739 -(542 + 196) ;break;end end end if (v326~=1) then else v329=nil;v330=nil;v326=3 -1 ;end end break;end if (v325~=(0 -0)) then else v326=0 + 0 ;v327=nil;v325=1 + 0 ;end if (v325==(1 + 0)) then v328=nil;v329=nil;v325=2;end end end break;end end break;end end end v47=7 -4 ;break;end end break;end end end v107=2 -1 ;end if (v107~=(1 + 0)) then else v103=1552 -(1126 + 425) ;break;end end break;end end end if (v103==(406 -(118 + 287))) then if (v47==(11 -8)) then local v109=0;local v110;while true do if (v109~=(1121 -(118 + 1003))) then else v110=0;while true do if (v110==(0 + 0)) then local v218=0 -0 ;while true do if (v218==0) then for v286=378 -(142 + 235) ,v24() do v49[v286-(766 -(574 + 191)) ]=v29();end return v51;end end end end break;end end end if (v47==1) then local v111=0;local v112;while true do if (v111~=0) then else v112=0 + 0 ;while true do if (v112~=0) then else local v219=0 -0 ;while true do if ((1 + 0)==v219) then v112=1 + 0 ;break;end if (v219~=(977 -(553 + 424))) then else v51={v48,v49,nil,v50};v52=v24();v219=1 + 0 ;end end end if (v112~=(1 + 0)) then else v53={};v47=1792 -(573 + 1217) ;break;end end break;end end end break;end end end break;end if (v46==(0 + 0)) then local v102=0 + 0 ;while true do if ((2 -1)==v102) then v46=2 -1 ;break;end if (0==v102) then v47=0 -0 ;v48=nil;v102=2 -1 ;end end end end break;end if (v45~=(0 + 0)) then else v46=0 -0 ;v47=nil;v45=4 -3 ;end if (v45==1) then v48=nil;v49=nil;v45=1 + 1 ;end if (v45~=(755 -(239 + 514))) then else v50=nil;v51=nil;v45=2 + 1 ;end if (v45==(1332 -(797 + 532))) then v52=nil;v53=nil;v45=4;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v54) if (v1(v54,2)==79) then local v83=0;while true do if (v83==0) then v20=v0(v3(v54,1,1));return "";end end else local v84=0;local v85;while true do if (v84==0) then v85=v2(v0(v54,16));if v20 then local v104=0;local v105;while true do if (v104==1) then return v105;end if (v104==0) then v105=v5(v85,v20);v20=nil;v104=1;end end else return v85;end break;end end end end);v18=1;end if (v18==3) then v24=nil;function v24() local v55=0 -0 ;local v56;local v57;local v58;local v59;while true do if (v55==1) then return (v59 * (16778022 -(118 + 688))) + (v58 * (65584 -(25 + 23))) + (v57 * (50 + 206)) + v56 ;end if ((1886 -(927 + (1850 -891)))==v55) then v56,v57,v58,v59=v1(v16,v19,v19 + (10 -7) );v19=v19 + 4 ;v55=(830 -(11 + 86)) -((38 -22) + 716) ;end end end v25=nil;v18=4;end if (v18==7) then function v30(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v69=v63;local v70=v64;local v71=v65;local v72=v28;local v73=1;local v74= -1;local v75={};local v76={...};local v77=v12("#",...) -1 ;local v78={};local v79={};for v86=0,v77 do if (v86>=v71) then v75[v86-v71 ]=v76[v86 + 1 ];else v79[v86]=v76[v86 + 1 ];end end local v80=(v77-v71) + 1 ;local v81;local v82;while true do local v87=0;while true do if (v87==1) then if (v82<=27) then if (v82<=13) then if (v82<=6) then if (v82<=2) then if (v82<=0) then local v113=0;local v114;local v115;local v116;while true do if (v113==0) then v114=v81[2];v115=v79[v114];v113=1;end if (1==v113) then v116=v81[3];for v247=1,v116 do v115[v247]=v79[v114 + v247 ];end break;end end elseif (v82==1) then if v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end elseif (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=4) then if (v82==3) then local v143=v81[2];v79[v143](v79[v143 + 1 ]);else v79[v81[2]]=v81[3];end elseif (v82==5) then local v146=v79[v81[4]];if  not v146 then v73=v73 + 1 ;else local v252=0;while true do if (v252==0) then v79[v81[2]]=v146;v73=v81[3];break;end end end else do return;end end elseif (v82<=9) then if (v82<=7) then local v117=0;local v118;local v119;while true do if (v117==0) then v118=v81[3];v119=v79[v118];v117=1;end if (v117==1) then for v253=v118 + 1 ,v81[4] do v119=v119   .. v79[v253] ;end v79[v81[2]]=v119;break;end end elseif (v82==8) then v79[v81[2]]=v81[3];else local v149=v81[3];local v150=v79[v149];for v226=v149 + 1 ,v81[4] do v150=v150   .. v79[v226] ;end v79[v81[2]]=v150;end elseif (v82<=11) then if (v82>10) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end else v79[v81[2]][v81[3]]=v81[4];end elseif (v82>12) then v79[v81[2]]=v81[3]~=0 ;else local v155=v81[2];v79[v155](v79[v155 + 1 ]);end elseif (v82<=20) then if (v82<=16) then if (v82<=14) then local v120=v81[2];v79[v120]=v79[v120](v13(v79,v120 + 1 ,v81[3]));elseif (v82>15) then v79[v81[2]]=v79[v81[3]][v81[4]];else local v158=0;local v159;while true do if (v158==0) then v159=v81[2];v79[v159]=v79[v159](v79[v159 + 1 ]);break;end end end elseif (v82<=18) then if (v82>17) then local v160=0;local v161;while true do if (v160==0) then v161=v81[2];v79[v161]=v79[v161](v79[v161 + 1 ]);break;end end else v79[v81[2]]={};end elseif (v82>19) then local v163=0;local v164;local v165;while true do if (0==v163) then v164=v81[2];v165={};v163=1;end if (v163==1) then for v277=1, #v78 do local v278=v78[v277];for v290=0, #v278 do local v291=v278[v290];local v292=v291[1];local v293=v291[2];if ((v292==v79) and (v293>=v164)) then v165[v293]=v292[v293];v291[1]=v165;end end end break;end end elseif (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=23) then if (v82<=21) then for v130=v81[2],v81[3] do v79[v130]=nil;end elseif (v82>22) then if (v79[v81[2]]<v81[4]) then v73=v73 + 1 ;else v73=v81[3];end else v79[v81[2]]=v61[v81[3]];end elseif (v82<=25) then if (v82==24) then v79[v81[2]]=v62[v81[3]];else local v170=0;local v171;local v172;while true do if (0==v170) then v171=v81[2];v172=v79[v81[3]];v170=1;end if (1==v170) then v79[v171 + 1 ]=v172;v79[v171]=v172[v81[4]];break;end end end elseif (v82==26) then local v173=0;local v174;while true do if (v173==0) then v174=v81[2];v79[v174](v13(v79,v174 + 1 ,v81[3]));break;end end else v79[v81[2]]=v81[3]~=0 ;end elseif (v82<=41) then if (v82<=34) then if (v82<=30) then if (v82<=28) then local v122=v70[v81[3]];local v123;local v124={};v123=v10({},{__index=function(v132,v133) local v134=v124[v133];return v134[1][v134[2]];end,__newindex=function(v135,v136,v137) local v138=0;local v139;while true do if (v138==0) then v139=v124[v136];v139[1][v139[2]]=v137;break;end end end});for v140=1,v81[4] do local v141=0;local v142;while true do if (v141==1) then if (v142[1]==36) then v124[v140-1 ]={v79,v142[3]};else v124[v140-1 ]={v61,v142[3]};end v78[ #v78 + 1 ]=v124;break;end if (v141==0) then v73=v73 + 1 ;v142=v69[v73];v141=1;end end end v79[v81[2]]=v30(v122,v123,v62);elseif (v82==29) then v79[v81[2]]=v79[v81[3]];else local v178=v81[2];local v179=v79[v178];for v227=v178 + 1 ,v81[3] do v7(v179,v79[v227]);end end elseif (v82<=32) then if (v82>31) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end else local v180=v81[2];local v181=v79[v180];local v182=v81[3];for v228=1,v182 do v181[v228]=v79[v180 + v228 ];end end elseif (v82==33) then local v183=0;local v184;while true do if (0==v183) then v184=v79[v81[4]];if  not v184 then v73=v73 + 1 ;else v79[v81[2]]=v184;v73=v81[3];end break;end end else do return;end end elseif (v82<=37) then if (v82<=35) then v79[v81[2]]=v61[v81[3]];elseif (v82==36) then v79[v81[2]]=v79[v81[3]];elseif (v79[v81[2]]<v81[4]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=39) then if (v82>38) then for v231=v81[2],v81[3] do v79[v231]=nil;end else v79[v81[2]]();end elseif (v82>40) then v79[v81[2]]=v79[v81[3]][v81[4]];else v79[v81[2]][v81[3]]=v79[v81[4]];end elseif (v82<=48) then if (v82<=44) then if (v82<=42) then v79[v81[2]][v81[3]]=v79[v81[4]];elseif (v82==43) then v79[v81[2]]= #v79[v81[3]];else local v192=v81[2];v79[v192]=v79[v192](v13(v79,v192 + 1 ,v81[3]));end elseif (v82<=46) then if (v82==45) then v79[v81[2]]={};else local v195=v81[2];local v196=v79[v81[3]];v79[v195 + 1 ]=v196;v79[v195]=v196[v81[4]];end elseif (v82==47) then v73=v81[3];else v79[v81[2]]();end elseif (v82<=52) then if (v82<=50) then if (v82==49) then v79[v81[2]]=v62[v81[3]];elseif v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end elseif (v82>51) then v79[v81[2]]= #v79[v81[3]];else local v204=v81[2];local v205={};for v233=1, #v78 do local v234=0;local v235;while true do if (0==v234) then v235=v78[v233];for v296=0, #v235 do local v297=0;local v298;local v299;local v300;while true do if (v297==0) then v298=v235[v296];v299=v298[1];v297=1;end if (v297==1) then v300=v298[2];if ((v299==v79) and (v300>=v204)) then local v315=0;while true do if (v315==0) then v205[v300]=v299[v300];v298[1]=v205;break;end end end break;end end end break;end end end end elseif (v82<=54) then if (v82>53) then v73=v81[3];else v79[v81[2]][v81[3]]=v81[4];end elseif (v82>55) then local v209=v70[v81[3]];local v210;local v211={};v210=v10({},{__index=function(v236,v237) local v238=v211[v237];return v238[1][v238[2]];end,__newindex=function(v239,v240,v241) local v242=0;local v243;while true do if (v242==0) then v243=v211[v240];v243[1][v243[2]]=v241;break;end end end});for v244=1,v81[4] do local v245=0;local v246;while true do if (v245==1) then if (v246[1]==36) then v211[v244-1 ]={v79,v246[3]};else v211[v244-1 ]={v61,v246[3]};end v78[ #v78 + 1 ]=v211;break;end if (v245==0) then v73=v73 + 1 ;v246=v69[v73];v245=1;end end end v79[v81[2]]=v30(v209,v210,v62);else local v213=0;local v214;while true do if (0==v213) then v214=v81[2];v79[v214](v13(v79,v214 + 1 ,v81[3]));break;end end end v73=v73 + 1 ;break;end if (v87==0) then v81=v69[v73];v82=v81[1];v87=1;end end end end;end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v66,v67,v68) if v68 then local v88=(v66/((287 -(175 + 110))^(v67-(2 -1))))%((9 -7)^(((v68-1) -(v67-((2530 -(711 + 22)) -(503 + 1293)))) + (2 -1))) ;return v88-(v88%(1 + (0 -0))) ;else local v89=0;local v90;while true do if (v89==(1061 -(810 + 251))) then v90=(2 + (859 -(240 + 619)))^(v67-(1 + 0 + 0)) ;return (((v66%(v90 + v90))>=v90) and (1 + 0)) or (533 -(43 + (779 -289))) ;end end end end v22=nil;v18=2;end end end return vv9(),...);